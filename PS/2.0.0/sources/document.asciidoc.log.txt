= Marine Traffic Management - Product Specification
:series: S
:docnumber: 127
:doctype: standard
:edition: 1.0.1
:language: en
:published-date: 2019-11-01
:copyright-year: 2019
:draft:
:committee: ircc
:workgroup: ibsc
:mn-document-class: iho
:mn-output-extensions: xml,html,doc,pdf,rxl
:local-cache-only:
:data-uri-image:
:imagesdir: images


[.preface]
== metanorma-extension

[.boilerplate]
--
Changes to this Product Specification are coordinated by the IHO Nautical
Information Provision Working Group (NIPWG). New editions will be
made available via the IHO web site. Maintenance of the Product Specification
shall conform to IHO Technical Resolution 2/2007 (revised 2010).
--

=== document history

[source,yaml]
----
- date:
  - type: updated
    value: 2018-05-31
  edition: "0.1"
  amend:
    - description: First draft
- date:
  - type: updated
    value: 2018-08-24
  edition: "0.2"
  contributor:
  - person:
      name:
        completename: RM
        abbreviation: RM
  amend:
    - description: Address comments in the June 2018 round of NIPWG reviews; conform to draft S-100 Edition 4.0.0 (July 2018).
- date:
  - type: updated
    value: 2018-11-29
  edition: "1.0.0 RC1"
  contributor:
  - person:
      name:
        completename: RM
        abbreviation: RM
  amend:
    - description: Address comments received during second round of NIPWG review; harmonize with October 2018 drafts of S-100 Ed. 4.0.0 and S-101 Ed. 1.0.0.
- date:
  - type: updated
    value: 2019-11-15
  edition: "1.0.1"
  contributor:
  - person:
      name:
        completename: RM
        abbreviation: RM
  amend:
    - description: Clarifications and removal of unused elements.
----


[[sec_1]]
== Overview

[[sec_1.1]]
=== Introduction

This document has been produced by the IHO Nautical Information Provision
Working Group (NIPWG) in response to a requirement to produce a data
product that can be used as a Nautical Publication Information Overlay
(NPIO) within an Electronic Chart Display and Information Systems
(ECDIS). It is based on the IHO S-100 framework specification and
the ISO 19100 series of standards. It is a vector product specification
that is primarily intended for encoding the extent and nature of Marine
Traffic Management, for navigational purposes.

Marine Traffic Management (MTM) datasets describe the availability
and reliability of vessel traffic services, pilotage, routing measures,
and ship reporting systems. This includes their service areas, services
offered, and instructions for contacting or utilizing these services.
MTM is intended to be a supplement to ENC, and therefore does not
describe the geographic information in detail equal to ENC, rather
it is shown as a simplified geometry to indicate location, and to
be a means of geolocating more regulatory information than the
typical ENC.


[[sec_2]]
== References

[[sec_2.1]]
[bibliography]
=== Normative

* [[[IHO_S_100,IHO S-100]]] _IHO Universal Hydrographic Data Model Edition 4.0.0 (December 2018)._

* [[[ISO_639_2,ISO 639-2]]] _Codes for the representation of names of languages -- Part 2: Alpha-3 code_

* [[[ISO_8601_2004,ISO 8601:2004]]] _Data elements and interchange formats - Information interchange - Representation of dates and times. 2004._

* [[[ISO_3166_1_1997,ISO 3166-1:1997]]] _Country Codes. 1997._

* [[[ISO_TS_19103_2005,ISO/TS 19103:2005]]] _Geographic Information - Conceptual schema language_

* [[[ISO_19106_2004,ISO 19106:2004]]] _Geographic Information -- Profiles_

* [[[ISO_19107_2003,ISO 19107:2003]]] _Geographic Information -- Spatial schema_

* [[[ISO_19109_2005,ISO 19109:2005]]] _Geographic Information - Rules for Application Schema_

* [[[ISO_19111_2003,ISO 19111:2003]]] _Geographic Information - Spatial referencing by coordinates_

* [[[ISO_19115_1,ISO 19115-1]]] _Geographic information -- Metadata -- Part 1 - Fundamentals. As amended by Amendment 01 (2018)_

* [[[ISO_TS_19115_3,ISO/TS 19115-3]]] _Geographic information - Metadata - XML schema implementation for fundamental concepts_

* [[[ISO_19131_2007,ISO 19131:2007]]] _Geographic Information - Data product specifications_

* [[[ISO_19136_2007,ISO 19136:2007]]] _Geographic Information -- Geography Markup Language_

* [[[ISO_19136_2_2015,ISO 19136-2:2015]]] _Geographic Information -- Geography Markup Language._

[[sec_2.2]]
[bibliography]
=== Informative

* [[[ISO_IEC_19757_3,ISO/IEC 19757-3]]], _Information technology -- Document Schema Definition Languages (DSDL) -- Part 3: Rule-based validation -- Schematron._

* [[[IHO_S_101,IHO S-101]]], _IHO Electronic Navigational Chart Product Specification Edition 1.0.0 (December 2018)._

* [[[ISO_19115_2006,ISO 19115:2003]]], _Geographic Information -- Metadata. As amended by Amendment 1 (2006)._

* [[[IHO_S_97,IHO S-97]]], _IHO Guideline for creating S-100 product specifications -- Part C. (Draft 0.2, August 2018)._

* [[[ISO_19108_2002,hidden(ISO 19108:2002)]]]

* [[[ISO_19101,hidden(ISO 19101)]]]

* [[[ISO_19123,hidden(ISO 19123)]]]

* [[[ISO_19117,hidden(ISO 19117)]]]

* [[[ISO_19110,hidden(ISO 19110)]]]

* [[[ISO_19157,hidden(ISO 19157)]]]

* [[[ISO_10646_1,hidden(ISO/IEC 10646-1)]]]

* [[[ISO_19115_3,hidden(ISO 19115-3)]]]

* [[[ISO_8211,hidden(ISO 8211)]]]

* [[[S127AnnexA,dropid(repo:(current-metanorma-collection/IHO S-127 Annex A))]]],
span:title[S-127 -- Annex A: Data Classification and Encoding Guide],
span:edition[1.0.1],
span:organization[International Hydrographic Organization]


[[sec_3]]
== Terms, definitions, and abbreviations

[[sec_3.1]]
[heading="Terms and definitions"]
=== Terms and definitions

The S-100 framework is based on the ISO 19100 series of geographic
standards. The terms and definitions provided here are used to standardize
the nomenclature found within that framework, whenever possible.
They are taken from the references cited in <<sec_2.1>>. Modifications
have been made when necessary.

==== application

manipulation and processing of data in support of user requirements

[.source]
<<ISO_19101>>

==== application schema

{{conceptual schema}} for data required by one or more {{application,applications}}

[.source]
<<ISO_19101>>

==== conceptual model

modelthat defines concepts of a {{universe of discourse}}

[.source]
<<ISO_19101>>

==== conceptual schema

formal description of a {{conceptual model}}

[.source]
<<ISO_19101>>

==== coverage

{{feature}} that acts as a function to return values from its range
for any direct position within its spatial, temporal or spatiotemporal
{{domain}}

[.source]
<<ISO_19123>>

[example]
Raster image, polygon overlay, digital elevation matrix.

==== data product

{{dataset}} or {{dataset series}} that conforms to a
{{data product specification}}

==== data product specification

detailed description of a {{dataset}} or {{dataset series}} together
with additional information that will enable it to be created, supplied
to, and used by another party

NOTE: A data product specification provides a description of the universe
of discourse and a specification for mapping the universe of discourse
to a dataset. It may be used for production, sales, end-use, or other
purpose.

==== dataset

identifiable collection of data

[.source]
<<ISO_19115_2006>>

NOTE: A dataset may be a smaller grouping of data which, though limited
by some constraint such as spatial extent or feature type, is located
physically within a larger dataset. Theoretically, a dataset may be
as small as a single feature or feature attribute contained within
a larger dataset. A hardcopy map or chart may be considered a dataset.

==== dataset series

collection of {{dataset,datasets}} sharing the same product specification

[.source]
<<ISO_19115_2006>>

==== domain

well-defined set

[.source]
<<ISO_TS_19103_2005>>

NOTE: Well-defined means that the definition is both necessary and
sufficient, as everything that satisfies the definition is in the
set and everything that does not satisfy the definition is necessarily
outside the set.

==== feature

abstraction of real world phenomena

[.source]
<<ISO_19101>>

NOTE: A feature may occur as a type or an instance. Feature type or
feature instance shall be used when only one is meant.

==== feature association

relationship that links instances of one {{feature}} type with instances
of the same or a different {{feature}} type

[.source]
<<ISO_19110>>

NOTE: A feature association may occur as a type or an instance. Feature
association type or feature association instance is used when only
one is meant.

NOTE: Feature associations include aggregation of features.

==== feature attribute

characteristic of a {{feature}}

[.source]
<<ISO_19101>>

NOTE: A feature attribute may occur as a type or an instance. Feature
attribute type or feature attribute instance is used when only one
is meant.

NOTE: A feature attribute type has a name, a data type and a domain
associated to it. A feature attribute for a feature instance has an
attribute value taken from the domain.

==== geographic data

data with implicit or explicit reference to a location relative to
the Earth

[.source]
<<ISO_19109_2005>>

NOTE: Geographic information is also used as a term for information
concerning phenomena implicitly or explicitly associated with a location
relative to the Earth.

==== metadata

data about data

[.source]
<<ISO_19115_2006>>

==== model

abstraction of some aspects of reality

[.source]
<<ISO_19109_2005>>

==== portrayal

presentation of information to humans

[.source]
<<ISO_19117>>

==== quality

totality of characteristics of a product that bear on its ability
to satisfy stated and implied needs

[.source]
<<ISO_19101>>

==== universe of discourse

view of the real or hypothetical world that includes everything of
interest

[.source]
<<ISO_19101>>

[[sec_3.2]]
=== Abbreviations

This product specification adopts the following convention for symbols
and abbreviated terms:

ASCII:: American Standard Code for Information Interchange

ECDIS:: Electronic Chart Display and Information Systems

ENC:: Electronic Navigational Chart

GML:: Geography Markup Language

IHO:: International Hydrographic Organization

IOC:: International Oceanographic Commission

ISO:: International Organization for Standardization

JPEG:: Joint Photographic Experts Group

MTM:: Marine Traffic Management

NIPWG:: Nautical Information Provision Working Group

NPIO:: Nautical Publication Information Overlay

PNG:: Portable Network Graphics

SVG:: Scalable Vector graphics

TIFF:: Tagged Image File Format

UML:: Unified Modelling Language

URI:: Uniformed Resource Identifier

URL:: Uniform Resource Locator

WGS:: World Geodetic System

XML:: eXtensible Markup Language

XSD:: XML Schema Definition

XSLT:: eXtensible Stylesheet Language Transformations

[[sec_3.3]]
=== Use of language

Within this document, including appendices and annexes:

* "Must" indicates a mandatory requirement.
* "Should" indicates an optional requirement, that is the recommended
process to be followed, but is not mandatory.
* "May" means "allowed to" or "could possibly", and is not mandatory.

[[sec_3.4]]
=== UML notations

In this document, conceptual schemas are presented in the Unified
Modelling Language (UML). Several model elements used in this schema
are defined in ISO standards or in IHO S-100 documents. In order to
ensure that class names in the model are unique ISO TC/211 has adopted
a convention of establishing a prefix to the names of classes that
define the TC/211 defined UML package in which the UML class is defined.
The IHO standards and this product specification make use of classes
derived directly from the ISO standards. This convention is also followed
in this document. In the IHO standards class names are identified
by the name of the standard, such as "S100" as the prefix optionally
followed by the bi-alpha prefix derived from ISO standard. In order
to avoid having multiple classes instantiating the same root classes,
the ISO classes and S-100 classes have been used where possible; however,
a new instantiated class is required if there is a need to alter a
class or relationship to prevent a reverse coupling between the model
elements introduced in this document and those defined in S-100 or
the ISO model.



[[sec_4]]
== Specification description

[[sec_4.1]]
=== Informal description of data product

This clause contains general information about the data product.

*Title:*:: Marine Traffic Management Product Specification.

*Abstract:*:: Marine Traffic Management (MTM) datasets describe the
availability and reliability of vessel traffic services, pilotage,
routing measures, and ship reporting systems. This includes their
service areas, services offered, and instructions for contacting or
utilizing these services. MTM is intended to be a supplement to ENC,
and therefore does not describe the geographic information in detail
equal to ENC, rather it is shown as a simplified geometry to indicate
location, and to be a means of geolocating more regulatory information
than the typical ENC.

*Content:*:: Datasets conforming to this specification will contain
all relevant MTM information for the area of coverage. Additionally,
there will be relevant metadata data quality, production authority,
data sources, and publication date.

*Spatial Extent:*:: Global coverage of maritime areas.

*Specific Purpose:*:: Describing traffic management in the maritime
domain for utilization in ECDIS, and to allow the producer to exchange
marine traffic management information with interested stakeholders.

[[sec_4.2]]
=== Data product specification metadata

This information uniquely identifies this Product Specification and
provides information about its creation and maintenance. For further
information on dataset metadata see the metadata clause.

*Title:*:: Marine Traffic Management

*S-100 Version:*:: 4.0.0

*S-127 Version:*:: 1.0.01

*Date:*:: 20182019-11-2915

*Language:*:: English

*Classification:*:: Unclassified

*Contact:*::
+
--
International Hydrographic Organization, +
4 quai Antoine 1er, +
B.P. 445 +
MC 98011 MONACO CEDEX +
Telephone: +377 93 10 81 00 +
Telefax: +377 93 10 81 40
--

*URL:*:: link:++http://www.iho.int++[]

*Identifier:*:: S-127

*Maintenance:*:: Amendments to this specification will be produced
on a needs basis. For reporting issues with this specification which
need correction, use the contact information.

[[sec_4.3]]
=== Product specification maintenance

[[sec_4.3.1]]
==== Introduction

Changes to S-127 will be released by the IHO as a new edition, a revision,
or as a document that includes clarification. These are described
below.

[[sec_4.3.2]]
==== New edition

New Editions introduce significant changes. New Editions enable new
concepts, such as the ability to support new functions or applications,
or the introduction of new constructs or data types. New Editions
are likely to have a significant impact on either existing users or
future users of S-127.

[[sec_4.3.3]]
==== Revisions

Revisions are defined as substantive semantic changes. Typically,
revisions will introduce change to correct factual errors; introduce
necessary changes that have become evident as a result of practical
experience or changing circumstances. A revision must not be classified
as a clarification. Revisions could have an impact on either existing
users or future users of this specification. All cumulative clarifications
will be included with the release of approved corrections revisions.

Changes in a revision are minor and ensure backward compatibility
with the previous versions within the same Edition. Newer revisions,
for example, introduce new features and attributes. Within the same
Edition, a dataset of one version could always be processed with a
later version of the feature and portrayal catalogues. In most cases
a new feature or portrayal catalogue will result in a revision of
this specification.

[[sec_4.3.4]]
==== Clarification

Clarifications are non-substantive changes. Typically, clarifications:
remove ambiguity; correct spelling, punctuation, or grammar errors;
amend or update cross references; insert improved graphics. Clarification
must not cause any substantive semantic changes.

Changes in a clarification are minor and ensure backward compatibility
with the previous versions within the same Edition. Within the same
Edition, a dataset of one clarification version could always be processed
with a later version of the feature and portrayal catalogues, and
a portrayal catalogue can always rely on earlier versions of the feature
catalogues.

Changes in a clarification are minor and ensure backward compatibility
with the previous versions.

[[sec_4.3.5]]
==== Version numbers

The associated version control numbering to identify changes (n) to
this specification must be as follows:

New Editions denoted as *n*.0.0

Revisions denoted as n.*n*.0

Clarifications denoted as n.n.*n*

[[sec_4.4]]
=== Specification scope

This product specification describes one data product and therefore
requires only one scope which is described below:

*Scope ID:*:: Marine Traffic Management datasets.

*Hierarchical level:*:: MD_ScopeCode - 005 (dataset)

*Hierarchical level name:*:: MTM dataset

*Level description:*:: information applies to the dataset

*Extent:*:: EX_Extent.description: Global coverage of maritime areas


[[sec_5]]
== Data product identification

This clause describes how to identify data sets that conform to the
specification. A dataset that conforms to this Product Specification
may be identified by its discovery metadata as defined in <<sec_12>>
of this specification. The information identifying the data product
may include the following items from <<IHO_S_100,clause=11-6>>
(adapted from <<ISO_19115_1>>).

*title*:: Marine Traffic Management

*abstract*:: Marine Traffic Management dataset is a vector dataset
containing all maritime navigationally relevant information regarding
the traffic management within a defined geographical area.

*alternate title*:: MTM

*content*:: Marine Traffic Management information, such as the availability
and reliability of vessel traffic services, pilotage, routing measures,
and ship reporting systems. This includes their service areas, services
offered, and instructions for contacting or utilizing these services.

*geographicDescription*:: *EX_GeographicDescription:* E.g., official
name of region

*spatialResolution*:: MD_Resolution>equivalentScale.denominator (integer)
or MD_Resolution>levelOfDetail (CharacterString). E.g.: "All scales"

*purpose*:: Describing traffic management in the maritime domain for
utilization in ECDIS, and to allow the producer to exchange Marine
Traffic Management information with interested stakeholders.

*language*:: ENAdditional values, if any, use CharacterString values
from <<ISO_639_2>>


[[sec_6]]
== Data content and structure

[[sec_6.1]]
=== Introduction

The S-127 product is based on the S-100 General Feature Model (GFM),
and is a feature-based vector product. <<fig_1>> shows how the S-127
application schema is realized from the S-100 GFM. All S-127 features
and information classes are derived from one of the abstract classes
*FeatureType* and *InformationType* defined in the S-127 application
schema, which realize the GFM meta-classes *S100_GF_FeatureType* and
*S100_GF_InformationType* respectively.

Marine Traffic Management (MTM) features are encoded as vector entities
which conform to S-100 geometry configuration level 3b
(<<IHO_S_100,clause=7-5.3.5>>). S-127 further constrains Level 3a with the
following:

* Coincident linear geometry must be avoided when there is a dependency
between features.
* The interpolation of arc by centre point and circle by centre point
curve segments must be circular arcs with centre and radius, as described
in <<IHO_S_100,clause=7-4.2.1>>, <<IHO_S_100,clause=7-4.2.20>>,
and <<IHO_S_100,clause=7-4.2.21>>.
* The interpolation of other GM_CurveSegment must be loxodromic.
* Linear geometry is defined by curves which are made of curve segments.
Each curve segment contains the geographic coordinates as control
points and defines an interpolation method between them. The distance
between two consecutive control points must not be less than 0.3 mm
at a display scale of 1:10000.

The following exception applies to S-127:

* The use of coordinates is restricted to two dimensions
(DirectPosition is restricted to two coordinates).

[[fig_1]]
.Realizations from the S-100 General Feature Model
image::figure-1.png[]

This clause contains the Application Schema expressed in UML and an
associated Feature Catalogue. The Feature Catalogue is included in
Annex C, and provides a full description of each feature type including
its attributes, attribute values, and relationships in the data product.
<<fig_2>> shows an overview of the S-127 application schema.

[[fig_2]]
.S-127 Data model overview
image::figure-2.png[]

The classes comprising the S-127 application schema are divided into
three packages. The first package, the Domain model, contains the
features and information types that model the MTM application domain
specifically. Meta-features that provide quality and coverage information
are contained within their own package. The last package is Cartographic
Features, which allow dataset creators to provide cartographically
necessary placements where required. Geographic features in all packages
use the spatial types from <<IHO_S_100,part=7>>, which are imported as-is
into the S-127 spatial types package and therefore can be used as
types for S-127 spatial attributes. The Geometry package also contains
definitions of 'union types' (combinations of the S-100 spatial types).
S-100 allows features to have different kinds of geometry, however
UML does not allow an attribute of a class to have multiple types.
The S-127 application schema models spatial attributes as attributes
of feature classes.

[[sec_6.2]]
=== Application schema

The UML models in this clause are segments of the overall S-127 application
schema, and include overviews of the feature classes, information
classes, meta features, spatial types, and the relationships between
them.

This clause contains a general overview of the classes and relationships
in the S-127 application schema. Detailed information about how to
use the feature types and information types to encode Marine Traffic
Management information is provided in the S-127 Data Classification
and Encoding Guide (DCEG).

The following conventions are used in the UML diagrams depicting the
application schema:

* Standard UML conventions for classes, associations, inheritance,
roles, and multiplicities apply. These conventions are described in
<<IHO_S_100,part=1>>.
* _Italic_ font for a class name indicates an abstract class.
* Feature classes are depicted with green background; the dark shade
for abstract feature classes and the light shade for ordinary (non-abstract)
feature classes.
* Information type classes are depicted with blue background; the
dark shade for abstract information type classes and the light shade
for ordinary information types.
* Association classes are depicted with a white background.
* Complex attributes are depicted with a pink background.
* Enumeration lists and codelists are depicted with a tan background.
The numeric code corresponding to each listed value is shown to its
right following an '=' sign.
* No significance attaches to the colour of associations.
(Complex diagrams may use different colours to distinguish associations
that cross one another.)
* Where the association role or name is not explicitly shown, the
default rules for roles and names apply:

** The role name is 'the<CLASSNAME>' where <CLASSNAME> is the name
of the class to which that association end is linked.
** The association name is '<CLASSNAME1>_<CLASSNAME2>' where <CLASSNAME1>
is the source and <CLASSNAME2> the target. In case of a feature/information
association the feature is the source. For feature/feature or information/information associations without explicit names the source/target are indicated by an arrowhead.
* Subclasses inherit the attributes and associations of their superclasses
at all levels, unless such inheritance is explicitly overridden in
the subclass.

[[sec_6.2.1]]
==== Domain model

The S-127 domain model has two base classes ('root classes') from
which all the domain-specific geographic features and information
type classes are derived. The base classes are shown in <<fig_3>>
below. The base class for geographic features is *FeatureType* and
the base class for information types is *InformationType*. Each of
the two base classes has a set of attributes which are therefore inherited
by all domain-specific features. The approximate area features in
S-127 are also derived from the geographic feature root class. Both
base classes are abstract classes and do not have direct instances
in S-127 data -- instead, S-127 feature and information type data
objects are instantiations of a non-abstract class derived from one
of these base classes.

S-127 meta- and cartographic features are not derived from these base
classes -- S-127 instead incorporates meta- and cartographic feature
definitions originally prepared for S-101 in the interests of harmonization
and interoperability with other S-100-based data products, especially
S-101 ENCs.

[[fig_3]]
.Base classes in S-127 and their attributes
image::figure-3.png[]

[[sec_6.2.1.1]]
===== Overview of domain features and information types

Marine Traffic Management data products include tracks and routes,
vessel traffic services, pilot services, underkeel clearance, and
certain types of specially designated areas which affect ships routeing.
It does not include protected areas, radio services (radio stations,
NAVTEX, weather or ice forecasts, NAVAREAs, METAREAs, etc.), natural
conditions, or harbour services. The broad categories of geographic
features included in the S-127 domain are:

* Tracks and routes, including IMO and non-IMO routeing measures and
recommended tracks.
* Vessel traffic services and related features such as calling-in
points, radar ranges, and signal stations.
* Pilot districts, pilot boarding places, and pilot services.
* Water level information features, including underkeel clearance
information features and waterways.
* Specially designated locations which affect navigation or provide
traffic services, such as military practice areas, security areas,
places of refuge, and areas needing special caution for reasons other
than natural hazards or environmental protection.

<<fig_4>> contains all the geographic features in the S-127 application
schema with their attributes. <<fig_5>> is a simplified version of
<<fig_4>>.

[%landscape]
<<<

[[fig_4]]
.Overview of S-127 Feature Types
image::figure-4.jpg[]

[[fig_5]]
.Overview of features (without attributes)
image::figure-5.jpg[]

[%portrait]
<<<

The abstract class *FeatureType* is an abstract class from which the
geographic feature classes in the application schema are derived.
*FeatureType* has attributes for fixed and periodic date ranges indicating
the effective dates of the feature, name of the feature, source information,
and a *textContent* attribute that allows text notes or references
to be provided for individual feature instances where appropriate.
The attributes defined in *FeatureType* are inherited by all S-127
geographic feature types. All the attributes in *FeatureType* are
optional. A derived class may impose additional constraints, which
will be described in the definition of the derived class or the S-127
DCEG.

Geographic features use spatial types defined in the geometry package
for spatial attributes. Datasets comprised of S-127 features are described
by metadata as defined in the S-127 metadata package. Metadata uses
selected spatial types (specifically, it uses the polygon type to
describe the coverage of a dataset).

[[fig_6]]
.Overview of S-127 Information Types
image::figure-6.png[]

The abstract class *InformationType* is an abstract class from which
the information type classes in the S-127 domain model are derived.
*InformationType* has attributes for fixed and periodic date ranges,
name associated with the individual information object if any, source
information, and a *textContent* attribute that allows text notes
or references to be provided for individual instances where appropriate.
The attributes defined in *InformationType* are inherited by all S-127
information type classes. All the attributes of *InformationType*
are optional. A derived class may impose additional constraints, which
will be described in the definition of the derived class or in the
S-127 DCEG.

[[sec_6.2.1.2]]
===== Relationships between features and information types

The hierarchy of geographic features is designed around the features'
associations to information types as well as inheritance of attributes.
There is a 4-level hierarchy of abstract feature classes. Each level
in the abstract feature class hierarchy is associated with one or
more information type classes. Subclasses inherit the associations
of their super-classes. The result is that feature classes can have
the associations of their direct parent abstract super-class as well
as associations inherited by the direct parent. For example,
*PilotBoardingPlace* can be associated to a *ContactDetails* object
(with a *SrvContact* association) as well as with a *Regulations*
object (with an *AssociatedRxN* association, inherited via the generalization
relationship between *OrganisationContactArea* and *FeatureType*).

[[fig_7]]
.Allowed direct relationships between feature and information types
image::figure-7.png[]

The four levels in the abstract hierarchy of feature classes depicted
in <<fig_7>> correspond to:

. S-127 features in general. Any S-127 feature can have a note, regulation,
etc., associated with it (associations to *NauticalInformation*, *Regulations*,
*Restrictions*, and *Recommendations*), or be designated relevant
to only a selected subset of vessels (association to class *Applicability*).
. Features associated with a source that may or must be contacted.
The abstract feature superclass for these features is *OrganisationContactArea*,
which adds an association to the information type *ContactDetails*.
. Features that may be supervised or controlled in some sense by an
organization. The abstract feature superclass for these features is
*SupervisedArea*, which adds an association to the information type
*Authority*. It inherits the associations of *OrganizationContactArea*
and *FeatureType*, so instances of these feature classes can have
associations to *ContactDetails*, *NauticalInformation*, *Regulations*,
*Restrictions*, and *Recommendations*, or be designated relevant to
only a selected subset of vessels (association to class *Applicability*).
. Features that also involve some kind of reporting (in the broad
sense). The abstract feature superclass for these features is
*ReportableServiceArea*, which adds an association to the information
type *ShipReport*. These features also inherit the allowed associations
of *FeatureType*, *OrganizationContactArea*, and *SupervisedArea*.

In addition to the associations allowed through inheritance, features
can have direct relationships to other information types. The S-127
application schema contains two such associations, between
*MilitaryPracticeArea* and *PilotService* on the feature side and
*ServiceHours* on the other.

Note that <<fig_7>> shows only feature/information associations. Feature
associations and information/information associations are allowed
as defined elsewhere in the application schema -- for example, the
operating hours of a *PilotService* on holidays will be indicated
by a *NonStandardWorkingDay* instance associated with the *ServiceHours*
instance which is in turn associated with the relevant *PilotService*
instance.

[[sec_6.2.1.3]]
===== Regulations, information notes, etc.

There are three main information types which represent regulations,
restrictions, and recommendations, respectively, and a fourth information
type for general or unclassifiable information.

* The *Regulations* class represents information derived from laws,
national shipping regulations, navigation rules, etc.
* Class *Restrictions* is intended for restrictions that are not derived
from regulatory sources.
* Class *Recommendations* is intended for information that is recommendatory
in nature; in S-127 this may be recommendations for maintenance of
listening watches, AMVER reporting, etc., that are either voluntary
or have not been issued as formal regulations.
* The fourth class, *NauticalInformation*, is intended for general
notes or other information that cannot be categorized as one of the
other three classes.

These information types all inherit the attributes of their immediate
abstract superclass *AbstractRxN*, which provides attributes *textContent*
and *graphic* for textual and pictorial material respectively. The
sub-attributes of its complex attribute *rxnCode* allow optional classification
of the material encoded in *textContent*/*graphic* according to the
type of material and the kind of nautical activity affected by it.
They also inherit the attributes of abstract superclass *InformationType*,
which allows encoding of the effective and expiry dates, if any, and
the source of information, if it is necessary to encode that data.

These classes are intended primarily for encoding text information,
such as that which derives from textual source material such as national
or local laws or official publications. Where specific attributes
such as the simple attribute *restriction* are permitted, they must
be used. For example, if a geographic feature class has the *restriction*
attribute, it should be used instead (explanations, details, paragraphs
from regulations, etc., can be encoded in an associated *Regulations*,
*NauticalInformation*, etc., object).

The use of these information types to associate regulatory and other
information to individual features is described elsewhere in <<sec_6.2.1>>.
<<fig_8>> depicts the *Regulations*, *Restrictions*, *Recommendations*,
and *NauticalInformation* classes, their class hierarchy, and the
attributes of their generalizations *AbstractRxN* and *InformationType*
(which are inherited by the classes).

[[fig_8]]
.Structure of regulations and note information types
image::figure-8.png[]

[[sec_6.2.1.4]]
===== Contact information

The detailed model of contact information is shown in <<fig_9>> below.

The *ContactDetails* class uses a condensed form of the complex attribute
*radiocommunications* compared to S-123 (Marine Radio Services).
When used as an attribute of *ContactDetails*, the sub-attributes
of *radiocommunications* are restricted to those shown in <<fig_9>>.
The complex attribute *telecommunications* is analogous to
*radiocommunications*, but describes telephone (and email, telegraph, etc.)
contact data.

[[fig_9]]
.Contact information - detail
image::figure-9.png[]

[[sec_6.2.1.5]]
===== Supervising organizations, schedules and business hours

The *SupervisedArea* class models areas which may have an associated
organization (government or private) that exercises some kind of control
or supervision over the area.

Operating schedules and business hours of organizations are modeled
by associating the *ServiceHours* class to an *Authority*. The *ServiceHours*
class is a container for the complex attribute describing daily schedules
for different weekdays (*scheduleByDayOfWeek*). This complex attribute
contains another complex attribute for time intervals and the days
to which they apply, and category sub-attribute to model whether the
schedule describes opening hours, closures, etc. Exceptions to the
schedule such as fixed or movable holidays are modeled by a
*NonStandardWorkingDay* class with attributes allowing indication
of the dates or days which are holidays or exceptions.

Working times and schedules for service features are modeled by an
analogous association from the feature object (association *LocationHours*).
When a *ServiceHours* is thus linked to a service feature, the service
hour information applies to the feature as a whole (e.g., all services
described in a *PilotService*).

Working times for *MilitaryPracticeArea* features are to be interpreted
as the hours of military activity. Practice times of 24 hours/day
are explicitly encoded (from 00:00:00 to 24:00:00 hrs., in accordance
with <<ISO_8601_2004>> conventions for midnight at the beginning and end of
a day). The dates of activity are indicated by attributes *fixedDateRange*
or *periodicDateRange* as appropriate. Special cases such as unknown
practice times can be explained in the *textContent* or *information*
attribute of *MilitaryPracticeArea* or *ServiceHours*.

The model for both kinds of schedules is shown in <<fig_10>>.

[[fig_10]]
.Working times and schedules
image::figure-10.png[]

All the service features in S-127 can be associated to a supervising
organization using the *SrvControl* association. The authority should
be encoded only if its presence in the dataset conveys information
that is useful to the end user.

Since *Authority* also has an information association to *ContactDetails*
(<<fig_11>>), it is in principle possible to link a *VesselTrafficServiceArea*
(for example) to both an *Authority* and *ContactDetails* as well
as linking the *VesselTrafficServiceArea* to the same *ContactDetails*.
Such linking is permissible but will generally be redundant and should,
if possible, be avoided as unnecessary duplication. It may be done
in situations where contact details for an operating authority are
different from contact details for the service it operates.

<<fig_10>> also shows associations between service features and *Authority*.
*Authority*-*ContactDetails* associations are omitted to reduce clutter.

[[sec_6.2.1.6]]
===== Reports to be submitted by vessels

Some marine traffic management areas require reports (or communications
not meeting the strict definition of "reporting") to be filed with
authorities when certain events occur such entering or leaving the
area. These requirements are modelled by association of a *ShipReport*
class to the Authority class. The area in question is modelled by
a feature of the requisite type, e.g., a *VesselTrafficServiceArea*.
Any time requirements or constraints on the filing of the report are
described by the *noticeTime* attribute, with explanations, if any
provided in text form in the *textContent* attribute of *ShipReport*.
Required reporting formats, if necessary to be included, are also
described in the *textContent* attribute. If reporting requirements
depend on vessel characteristics such as type of cargo, etc., that
is encoded using an associated *Applicability* instance. <<fig_11>>
shows the model elements that are used to carry these conditions.

[[fig_11]]
.Reporting
image::figure-11.png[]

[[sec_6.2.1.7]]
===== Regulations applying in specific geographic features

The *AssociatedRxN* association between a feature type and a *Regulations*,
*Restrictions*, *Recommendations*, or *NauticalInformation* object
(see <<fig_12>>) indicates that the *Regulation*, etc., is applicable
within the associated feature. If it is necessary to identify an authority
or organization related to a particular regulation (restriction, etc.)
object, this may be done using the *RelatedOrganisation* association
between *Regulations*, etc., and an *Authority* object. This should
be included only when the connection to the *Authority* conveys useful
information to the end user -- it is not intended to encode the issuing
or controlling authority for every regulation. Note also that while
*Authority* can be associated to geographic features as well as *Regulations*,
etc., encoding both associations is not mandatory even when the same
*Authority* is associated to a service area as well as a *Regulations*
object (or *NauticalInformation*, etc.).

[[fig_12]]
.Regulations, etc., relevant to specific features
image::figure-12.png[]

[[sec_6.2.1.8]]
===== Regulations applying only to vessels with specific characteristics or cargoes

Certain regulations apply only to vessels of specified dimensions,
types, or carrying specified cargo, etc.

This is modelled by first defining the relevant subset of vessels
according to the dimension, type, cargo, etc., and then associating
that subset to the appropriate feature or information type. The subset
of vessels is modelled using the *Applicability* class, which contains
attributes for the most common vessel characteristics used in nautical
publications. These include measurements (length, beam, draught),
type of cargo, displacement, etc. Constraints which cannot be modelled
using the attributes of *Applicability* can be described in plain
text in its *information* attribute.

Conditions relating to vessel dimensions are modelled by the complex
attribute *vesselsMeasurements*, which has sub-attributes for naming
the dimension and indicating the limit (whether the condition applies
to a vessel which exceeds or falls below the limit). For example,
the combinations below describe the condition
"length overall > 50 m" (Condition 1) and "length overall < 90 m"
(Condition 2):

[[table_6.1]]
.Conditions relating to vessel dimensions
[cols="4"]
|===
| h| Condition 1 h| Condition 2 h| Condition 3

| *vesselsCharacteristics*      | length overall | length overall | breadth
| *vesselsCharacteristicsUnit*  | metre          | metre          | metre
| *comparisonOperator*          | greater than   | less than      | greater than
| *vesselsCharacteristicsValue* | 50             | 90             | 20
|===


The *logicalConnectives* attribute is used to indicate how to interpret
the case where multiple conditions are encoded using attributes of
measurements - whether the conditions described by condition attributes
are cumulative (conjunctive, AND) or alternatives (disjunctive, OR).
A _logicalConnectives=AND_ combined with Conditions 1 and 2 above
describes a vessel of length between 50 and 90 metres; _logicalConnectives=OR_
combined with conditions 1 and 3 describes a vessel of length greater
than 50 metres or beam greater than 20 metres.

This modelling cannot represent subsets defined by both AND and OR
combinations of conditions, but it is always possible to convert such
complex conditions into multiple combinations each using only AND
('conjunctive normal form') or OR ('disjunctive normal form'), and
model the subset using more than one *Applicability* object.

<<fig_13>> depicts the classes and attributes that can be used to
define subsets of vessels according to specified characteristics.

[[fig_13]]
.Vessel subsets characterized by cargo and dimensions
image::figure-13.png[]

Given the relevant subset of vessels, it can be associated to the
appropriate feature, regulation, or report by a *PermissionType*,
or *InclusionType* association. These are association classes, whose
single attribute models the nature of the relationship between the
vessel subset and feature or information type. <<fig_14>> depicts
the use of vessel subsets in *PermissionType* or *InclusionType* associations.

The association classes *PermissionType* and *InclusionType* basically
characterize the relationship. For example:

. A specified set of vessels is COVERED by a regulation and another
set of vessels is EXEMPT from the regulation.
. Vessels with specified cargo & dimensions MUST use a specified pilot
boarding place, vessels of smaller dimensions are RECOMMENDED to use
the boarding place, and warships are EXEMPT from using the pilot boarding
place.

"COVERED" and "EXEMPT" are different kinds of relationship between
different subsets of vessels characterized by different dimensional
limits, etc., and a given regulation.

"MUST use", "RECOMMENDED to use", and "EXEMPT from use" are relationships
between different subsets of vessels characterized by different dimensional
limits, etc., and a given feature or service.

[[fig_14]]
.Applicability of reporting requirements, rules, etc. to vessel categories
image::figure-14.png[]

*PermissionType* links a feature to an *Applicability*, and models
a requirement, recommendation or prohibition on entry into a feature,
by the specified subset of vessels.

Inclusion links a *Regulation*, *Recommendation*, *Restriction*, or
*NauticalInformation* instance to a subset defined by an *Applicability*
object, and indicates whether the content of the *Regulation*, etc.,
applies to the vessels (_membership=included_), or whether it explicitly
does not apply (_membership=excluded_).

Informally:

. Applicability describes the set of vessels: i.e., _who_
. Regulations provides the text of the regulation: i.e., _what_
. The association class *InclusionType* describes the relationship
between _who_ and _what_. That is, _who_ "must (or can)" / "need not"
do _what._

And:

[start=4]
. A geographic feature defines a location or physical facility: i.e.,
_where_
. The association class *PermissionType* describes the relationship
between _who_ and _where_. That is, _who_ can / must / should / need
not use (or sail) _where_.

[[sec_6.2.1.9]]
===== Routeing measures

The routeing measures model defines only one generalized routeing
measure feature. The type of routeing is indicated by a category attribute.
The geometry may be area or line (area geometry should be encoded
in preference to line geometry, if possible). The geometry is expected
to be the spatial combination of relevant geometries from the ENC.
The original features need not be the same class, e.g., an S-127
*RouteingMeasure* feature may combine Inshore Traffic Zone and TSS
Lane Part geometries from S-101 data.

[[fig_15]]
.Routeing measures
image::figure-15.png[]

Additional attributes can be encoded in a *RouteingMeasure* depending
on the type of measure. For features that derive from a range system,
leading lines, or transit lines (i.e.
 _categoryOfRouteingMeasure = 4 (recommended route)_), the
 *categoryOfNavigationLine* attribute may also be encoded to describe
the type of routeing measure. For features that derive from a traffic
separation scheme, (i.e.,
_categoryOfRouteingMeasure = 5 (traffic separation scheme)_), the
*categoryOfTrafficSeparationScheme* attribute may also be encoded
to describe whether is IMO-adopted or not.

Regulations, etc., can be associated with the feature and requirements
relating to use by specific classes of vessels indicated by an associated
*Applicability* instance. If different parts of the routeing measure
have different information associated with them, the geometry can
be divided into parts as needed.

[[sec_6.2.1.10]]
===== Vessel traffic service areas and related features

<<fig_16>> depicts the S-127 features relevant to VTS areas and features
associated to VTS. Associations to information types are also shown.

It is not necessary to associate non-VTS features in this part of
the model to a VTS. They may be included independently of VTS areas
if they are relevant to traffic management on their own.

[[fig_16]]
.Vessel traffic service areas and associated classes
image::figure-16.png[]

[[sec_6.2.1.11]]
===== Pilotage

Pilot boarding places, districts, and services are depicted in <<fig_17>>
below, along with associated information types.

[[fig_17]]
.Pilotage features and associated classes
image::figure-17.png[]

[[sec_6.2.1.12]]
===== Water levels and underkeel clearances

In some locations, up-to-date information may be available, or required
to be obtained, from an off-vessel source, or required to be computed
in near-real-time using software. This is indicated by the *dynamicResource*
attribute. Constraints related to this attribute are:

[[table_6.2]]
.Types of dynamic resources
[cols="3"]
|===
h| Value h| Definition h| Requirement

| static
| The information is static, or a source of up-to-date information
is unavailable or unknown.
| None -- vessels can use the water level or clearance information
encoded in the feature.

| mandatory external dynamic
| An external source of up-to-date information is available and interaction
with it to obtain up-to-date information is required.
| The external source must be encoded in an associated ContactDetails.
Vessels are required to access this external source for up-to-date
information.

| optional external dynamic
| An external source of up-to-date information is available but interaction
with it to obtain up-to-date information is not required.
| The external source must be encoded in an associated ContactDetails.
Vessels are not required to access this external source.

| onboard dynamic | Up-to-date information may be computed using only
onboard resources.
| No external source is encoded. Vessels are required to compute water
level or clearance information using onboard software. The controlling
authority may specify the allowed software.

|===

In general, dynamic resources are realizations of a common metaclass
as depicted in <<fig_18>>.

[[fig_18]]
.Feature classes modeling dynamic resources
image::figure-18.png[]

This metaclass binds the *dynamicResource* attribute described in
<<table_6.2>> and allows an association to *ContactDetails* for pointers
to the location of external resources where the information can be
obtained. It also allows an optional association to *Authority* objects,
for coding the responsible authority. Further, since it is a feature
type, it has the same attributes and associations as generic feature
classes, i.e., atttributes *fixedDateRange*, etc., and associations
to the information types *NauticalInformation*, etc.

The metaclass represents the structural characteristics of all features
which represent dynamic information. Individual feature classes representing
dynamic resources should have the attributes and associations of the
metaclass, and may, in addition, bind attributes and have associations
specific to the particular concepts represented by the realization.
For example, *WaterwayArea* adds the attributes *siltationRate* and
*status* to those of the metaclass.

The S-127 features related to underkeel clearance and dynamic water
level information are depicted in <<fig_19>> below.

[[fig_19]]
.Underkeel clearance and water level features and associated classes
image::figure-19.png[]

[[sec_6.2.1.13]]
===== Other areas

This part of the model includes miscellaneous areas which are relevant
to marine traffic management and is depicted in <<fig_20>>.

[[fig_20]]
.Cautionary and other specially designated areas
image::figure-20.png[]

[[sec_6.2.1.14]]
===== S-127 Enumerations and codelists

For completeness, the enumerations and codelists in the S-127 domain
are provided in <<fig_21;to!fig_23>>. They are divided into multiple figures
for convenience.

[[fig_21]]
.Category enumerations
image::figure-21.png[]

[[fig_22]]
.Other enumerations and codelists
image::figure-22.jpg[]

[[fig_23]]
.Enumerations for meta-features
image::figure-23.png[]

[[sec_6.2.1.15]]
===== Uncategorized additional information

The domain model also provides a method for attaching to any feature
or information type data in the form of a text note, graphic, or Internet
reference which cannot be categorized using an appropriate feature
or information type. This consists of defining a *NauticalInformation*
object and referencing it from the feature or information type using
the *AdditionalInformation* association. This method is intended to
be a last resort and every effort should be made to use a more specific
feature or information type to encode the information to be attached,
including splitting the information in question across more than one
type of feature or information object as needed and/or using the *AssociatedRxN*
association instead of *AdditionalInformation*, wherever the nature
of the content allows it. See <<fig_24>>.

[[fig_24]]
.Attachment of uncategorizable information to any feature or information type
image::figure-24.png[]

The *AdditionalInformation* association must not be used to chain
*NauticalInformation*, *Regulations*, *Restrictions*, or *Recommendations*
objects, whether they are of the same class or different classes.

[[sec_6.2.2]]
==== Meta features

S-127 has two meta feature classes. The first one is *QualityOfNonbathymetricData* and is derived from *QualityOfTemporalVariation*, which in turn is derived from *DataQuality*. The second is *DataCoverage*. See <<fig_25>>.

[[fig_25]]
.Overview of Meta feature classes and enumerations
image::figure-25.png[]

[[sec_6.2.3]]
==== Spatial quality information type

S-127 spatial quality is composed of two information types, namely
*SpatialQuality* and *SpatialQualityPoint*, which is derived of the
first. As the name indicates, the latter is for spatial points, while
*SpatialQuality* is for curves. The attributes are for temporal quality
and qualitative and quantitative horizontal quality. See <<fig_26>>.

[[fig_26]]
.Spatial quality
image::figure-26.png[]

[[sec_6.2.4]]
==== Cartographic features

S-127 utilizes a cartographic feature called *TextPlacement* that
is used in association with the *featureName* attribute to optimise
text positioning, such as at smaller scales to prevent cluttering.
This feature can be associated to any geographic feature and gives
the location of a text string relative to the location of the feature.
See <<fig_27>>.

[[fig_27]]
.Text placement
image::figure-27.png[]


[[sec_7]]
== Feature Catalogue

[[sec_7.1]]
=== Introduction

The Feature Catalogue describes the feature types, information types,
attributes, attribute values, associations and roles which may be
used in the product. The S-127 Feature Catalogue is available in an
XML document which conforms to the S-100 XML Feature Catalogue Schema
and can be downloaded from the IHO website (link:++http://www.iho.int/++[]).
Simple attributes used in this specification are listed in <<table_7.1>>
below.

*Name:*:: Marine Traffic Management Feature Catalogue

*Scope:*:: Ocean, Coastal, Ports, Harbors, and Inland waters

*Version Number:*:: 1.0.01

*Version Date:*:: 2018-11-29

*Producer:*::
+
--
International Hydrographic Organization Secretariat, +
4 quai Antoine 1er, +
B.P. 445 +
MC 98011 MONACO CEDEX +
Telephone: +377 93 10 81 00 +
Telefax: + 377 93 10 81 40 +
URL link:++http://www.iho.int++[]
--

*Language:*:: English

[[sec_7.2]]
=== Feature Types

Feature types contain descriptive attributes that characterize real-world
entities. The word 'feature' may be used in one of two senses -- feature
type and feature instance. A feature type is a class and is defined
in a Feature Catalogue. A feature instance is a single occurrence
of the feature type and represented as an object in a dataset. A feature
instance is located by a relationship to one or more spatial instances.
A feature instance may exist without referencing a spatial instance.

[[sec_7.2.1]]
==== Geographic

A geographic (Geo) feature type carries the descriptive characteristics
of a real-world entity.

[[sec_7.2.2]]
==== Meta

Meta features contain information about other features within a dataset.
Information defined by meta features override the default metadata
values defined by the dataset descriptive records. Meta attribution
on individual features overrides attribution on meta features.

[[sec_7.2.3]]
==== Cartographic

Cartographic features contain information about the cartographic representation
(including text) of real world entities.

[[sec_7.2.4]]
==== Feature relationship

A feature relationship links instances of one feature type with instances
of the same or a different feature type.

[[sec_7.2.5]]
==== Information Types

Information types are identifiable pieces of information in a dataset
that can be shared between other features. They have attributes but
have no relationship to any geometry; information types may reference
other information types.

[[sec_7.2.5.1]]
===== Spatial quality

Spatial quality attributes are carried in two information class called
Spatial Quality (for curves) and Spatial Quality Points (for points).
Currently no use case for associating surfaces with spatial quality
attributes has been identified, therefore this is prohibited.

[[sec_7.2.6]]
==== Attributes

S-127 defines attributes as either simple or complex.

[[sec_7.2.6.1]]
===== Simple attributes

The simple attribute value types used in S-127 are listed in <<table_7.1>>:

[[table_7.1]]
.Data types for simple attributes
[cols="2"]
|===
h| Type h| Definition

| Enumeration | A fixed list of valid identifiers of named literal values
| Boolean
| A value representing binary logic. The value can be either True
or False. The default state for Boolean type attributes (i.e. where
the attribute is not populated for the feature) is False.
| Real | A signed Real (floating point) number consisting of a mantissa
and an exponent
| Integer
| A signed integer number. The representation of an integer is encapsulation
and usage dependent.
| CharacterString or Text footnote:[Simple attributes in feature and
information types use _Text_; metadata attributes use _CharacterString_.]

| An arbitrary-length sequence of characters including accents and
special characters from a repertoire of one of the adopted character
sets.
| Date footnote:note_seven_one[The _Date_ and _URI_ types are not
used in S-127 1.0.x0, but are described because they are referenced
by other types.]

a| A date provides values for year, month and day according to the
Gregorian Calendar. Character encoding of a date is a string which
must follow the calendar date format (complete representation, basic
format) for date specified by <<ISO_8601_2004>>.

[example]
19980918 (YYYY-MM-DD)

| Time
a| A time is given by an hour, minute and second. Character encoding
of a time is a string that follows the local time (complete representation,
basic format) format defined in <<ISO_8601_2004>>.

[example]
183059 or 183059+0100 or 183059Z

| Codelist | A type of flexible enumeration. A code list type is a
list of literals which may be extended only in conformance with specified
rules.
| Truncated date | One or more components of the Date type are omitted.
| URI footnote:note_seven_one[]

a| A uniform resource identifier as defined in RFC 3986. Character
encodingof a URI shall follow the syntax rules defined in RFC 3986.

[example]
link:++http://registry.iho.int++[]

| URL
a| A uniform resource locator (URL) is a URI that provides a means
oflocating the resource by describing its primary access mechanism
(RFC3986).

[example]
link:++http://registry.iho.int++[]

|===

[[sec_7.3]]
=== Complex attributes

Complex attributes are aggregations of other attributes that are either
simple or complex. The aggregation is defined by means of attribute
bindings.

[[fig_28]]
.textContent - a complex attribute
image::figure-28.emf[]

[[sec_7.4]]
=== Units of measure

The following units of measure is used in Marine Traffic Management
datasets;

* Orientation is given in decimal degrees
* Radio frequency is given in hertz
* Uncertainty is given in metres
* Distances are given in metres or nautical miles
* Depths are given in metres.

[[sec_7.5]]
=== Geometric representation

Geometric representation is the digital description of the spatial
component of an object as described in S-100 and <<ISO_19107_2003>>. This product
specification uses three types of geometries: GM_Point, GM_OrientableCurve,
and GM_OrientableSurface.

[[fig_29]]
.Geometric primitives
image::figure-29.png[]



[[sec_8]]
== Coordinate reference system (CRS)

[[sec_8.1]]
=== Introduction

The location of an object in the S-100 standard is defined by means
of coordinates which relate a feature to a position. The coordinate
reference system used for this product specification is World Geodetic
System 1984 (WGS 84) which is defined by the European Petroleum Survey
Group (EPSG) code 4326, (or similar - North American Datum 1983 /
Canadian Spatial Reference System).

Spatial data are expressed as latitude (stem:[varphi]) and longitude
(stem:[lambda]) geographic
coordinates. Latitude values are stored as a negative number to represent
a position south of the Equator. Longitude values are stored as a
negative number to represent a position west of the Prime Meridian.
Coordinates are expressed as real value, degree / degree decimal format.
Datasets conforming to this product specification are not projected.

*Horizontal coordinate reference system:*:: WGS 84

*Projection:*:: None

*Vertical coordinate reference system:*:: None footnote:[Not used
in any of the feature classes, therefore not needed.]

*Temporal reference system:*:: Gregorian calendar

*Coordinate reference system registry:*:: link:++http://www.epsg-registry.org/++[EPSG Geodetic Parameter Registry]

*Date type (according to <<ISO_19115_1>>):*:: 002 - publication

[[sec_8.2]]
=== Horizontal reference system

Positional data is expressed in latitude and longitude geographic
coordinates to one of the reference horizontal reference systems defined
in the HORDAT attribute. Unless otherwise defined, the World Geodetic
System 84 (WGS 84) will be used for MTM data products.

[[sec_8.3]]
=== Projection

Marine Traffic Management data products are un-projected.

[[sec_8.4]]
=== Vertical coordinate reference system

Marine Traffic Management data products do not provide detailed vertical
information.

[[sec_8.5]]
=== Temporal reference system

Time is measured by reference to Calendar dates and Clock time in
accordance with <<ISO_19108_2002,clause=5.4.4>>, Temporal Schema.

[[sec_8.6]]
=== Marine Traffic Management data and scale

MTM data must be compiled in the best applicable scale. The use of
the data itself is "scale independent". That means that the data can
be used at any scale. S-100 allows the association of multiple spatial
attributes to a single feature instance. In principle, each of these
spatial attributes can be qualified by maximum and minimum scales.

For example, it is possible, within one dataset, to have a single
instance of a feature that has more than one area geometry. Each of
these geometries has different scale max/min attributes. Moreover,
due to cluttering in smaller scales, the scale minimum attribute may
be used to turn off portrayal of some features at smaller scales.


[[sec_9]]
== Data quality

[[sec_9.1]]
=== Introduction

Data quality allows users and user systems to assess fitness for use
of the provided data. Data quality measures and the associated evaluation
are reported as metadata of a data product. This metadata improves
interoperability with other data products and provides usage by user
groups that the data product was not originally intended for.
The secondary users can make assessments of the data product usefulness
in their application based on the reported data quality measures.

For S-127 the following data quality elements have been included:

* Conformance to this Product Specification;
* Intended purpose of the data product;
* Completeness of the data product in terms of coverage;
* Logical Consistency;
* Positional Uncertainty and Accuracy;
* Thematic Accuracy;
* Temporal Quality;
* Aggregation measures;
* Elements specifically required for the data product
(none currently identified for S-127);
* Validation checks or conformance checks including:

** General tests for dataset integrity;
** Specific tests for a specific data model;

[[sec_9.2]]
=== Quality measure elements

The data quality measures recommended in <<IHO_S_97,part=C>> and their applicability
in S-127 are indicated in <<table_9.1>> below. NA indicates the measure
is not applicable. This table reproduces the first 4 columns of the
data quality checklist recommended elements and replaces the final
column with descriptions of the scope of the element in the context
of S-127 datasets.

[[table_9.1]]
.IHO recommended quality elements and their relevance to S-127
[cols="6"]
|===
| No. | Data quality element and sub element | Definition | DQ measure / description | Evaluation scope | Scope in S-127

| 1 | Completeness / Commission
| Excess data present in a dataset, as described by the scope.
| numberOfExcessItems / This data quality measure indicates the number
of items in the dataset, that should not have been present in the
dataset.
| dataset/dataset series | All features and info types

| 2 | Completeness / Commission
| Excess data present in a dataset, as described by the scope.
| numberOfDuplicateFeatureInstances / This data quality measure indicates the total number of exact duplications of feature instances within the data.
| dataset/dataset series | All features and info types

| 3 | Completeness / Omission
| Data absent from the dataset, as described by the scope.
| numberOfMissingItems / This data quality measure is an indicator that shows that a specific item is missing in the data.
| dataset/dataset series/spatial object type | All features and info types

| 4 | Logical Consistency / Conceptual Consistency
| Adherence to the rules of a conceptual schema.
| numberOfInvalidSurfaceOverlaps / This data quality measure is a count of the total number of erroneous overlaps within the data. Which surfaces may overlap and which must not is application dependent. Not all overlapping surfaces are necessarily erroneous.
| spatial object / spatial object type | Features with surface geometry; spatial objects of type surface

| 5 | Logical Consistency / Domain Consistency
| Adherence of the values to the value domains.
| numberOfNonconformantItems / This data quality measure is a count of all items in the dataset that are not in conformance with their value domain.
| spatial object / spatial object type | All features and info types

| 6 | Logical Consistency / Format Consistency
| Degree to which data is stored in accordance with the physical structure of the data set, as described by the scope
| physicalStructureConflictsNumber / This data quality measure is a count of all items in the dataset that are stored in conflict with the physical structure of the dataset.
| dataset/dataset series | All features and info types

| 7 | Logical Consistency / Topological Consistency
| Correctness of the explicitly encoded topological characteristics of the dataset, as described by the scope.
| rateOfFaultyPointCurveConnections / This data quality measure indicates the number of faulty link-node connections in relation to the number of supposed link-node connections. This data quality measure gives the erroneous point-curve connections in relation to the total number of point-curve connections.
| spatial object / spatial object type | Features with curve geometry; spatial objects of curve types

| 8 | Logical Consistency / Topological Consistency
| Correctness of the explicitly encoded topological characteristics of the dataset, as described by the scope.
| numberOfMissingConnectionsUndershoots / This data quality measure is a count of items in the dataset within the parameter tolerance that are mismatched due to undershoots.
| spatial object / spatial object type | Features with curve geometry; spatial objects of curve types

| 9 | Logical Consistency / Topological Consistency
| Correctness of the explicitly encoded topological characteristics of the dataset, as described by the scope.
| numberOfMissingConnectionsOvershoots / This data quality measure is a count of items in the dataset within the parameter tolerance that are mismatched due to overshoots.
| spatial object / spatial object type | Features with curve geometry; spatial objects of curve types

| 10 | Logical Consistency / Topological Consistency
| Correctness of the explicitly encoded topological characteristics of the dataset, as described by the scope.
| numberOfInvalidSlivers / This data quality measure is a count of all items in the dataset that are invalid sliver surfaces. A sliver is an unintended area that occurs when adjacent surfaces are not digitized properly. The borders of the adjacent surfaces may unintentionally gap or overlap to cause a topological error.
| dataset / dataset series | Features with surface geometry; spatial objects of type surface

| 11 | Logical Consistency / Topological Consistency
| Correctness of the explicitly encoded topological characteristics of the dataset, as described by the scope.
| numberOfInvalidSelfIntersects / This data quality measure is a count of all items in the dataset that illegally intersect with themselves.
| spatial object / spatial object type
| Features with surface geometry; spatial objects of type surface or curve

| 12 | Logical Consistency / Topological Consistency
| Correctness of the explicitly encoded topological characteristics of the dataset, as described by the scope.
| numberOfInvalidSelfOverlap / This data quality measure is a count of all items in the dataset that illegally self-overlap.
| spatial object / spatial object type
| Features with surface geometry; spatial objects of type surface or curve

| 13 | Positional Accuracy / Absolute or External Accuracy
| Closeness of reported coordinative values to values accepted as or being true.
| Root Mean Square Error / Standard deviation, where the true value is not estimated from the observations but known a priori.
| spatial object / spatial object type
| objects that have coordinative values associated.

| 14 | Positional Accuracy / Vertical Position Accuracy
| Closeness of reported coordinative values to values accepted as or being true.
| linearMapAccuracy2Sigma / Half length of the interval defined by an upper and lower limit in which the true value lies with probability 95%.
| spatial object / spatial object type
| NA. S-127 does not include vertical measurements.

| 15 | Positional Accuracy / Horizontal Position Accuracy
| Closeness of reported coordinative values to values accepted as or being true.
| linearMapAccuracy2Sigma / Half length of the interval defined by an upper and lower limit in which the true value lies with probability 95%.
| spatial object / spatial object type
| objects that have a horizontal coordinate values associated.

| 16 | Positional Accuracy / Gridded Data Position Accuracy
| Closeness of reported coordinative values to values accepted as or being true.
| Root mean square error of planimetry / Radius of a circle around the given point, in which the true value lies with probability P.
| spatial object / spatial object type
| NA. S-127 does not have features with gridded geometry

| 17 | Temporal Quality / Temporal Consistency
| Consistency with time.
| Correctness of ordered events or sequences, if reported.
| dataset/dataset series/spatial object type
| Features with time intervals, fixed/periodic date ranges, schedules.

| 18 | Thematic Accuracy / ThematicClassificationCorrectness
| Comparison of the classes assigned to features or their attributes to a universe of discourse.
| miscalculationRate / This data quality measure indicates the number of incorrectly classified features in relation to the number of features that are supposed to be there. [Adapted from <<ISO_19157>>] This is a RATE which is a ratio, and is expressed as a REAL number representing the rational fraction corresponding to the numerator and denominator of the ratio. For example, if there are 1 items that are classified incorrectly and there are 100 of the items in the dataset then the ratio is 1/100 and the reported rate = 0.01.
| dataset/dataset series/spatial object type
| All features and info types

| 19 | Aggregation Measures / AggregationMeasures
| In a data product specification, several requirements are set up for a product to conform to the specification.
| DataProductSpecificationPassed / This data quality measure is a boolean indicating that all requirements in the referred data product specification are fulfilled.
| dataset/dataset series/spatial object type
| Dataset as a whole

| 20 | Aggregation Measures / AggregationMeasures
| In a data product specification, several requirements are set up for a product to conform to the specification.
| DataProductSpecificationFailRate / This data quality measure is a number indicating the number of data product specification requirements that are not fulfilled by the current product/dataset in relation to the total number of data product specification requirements.
| dataset/dataset series/spatial object type
| Dataset as a whole

|===

[[sec_9.3]]
=== Test methods

Test methods consist of executing the relevant tests from Annex E
(Validation Checks) for each quality element in <<table_9.1>> and
counting the number of instances in the dataset which fail the checks
for that quality element.

Note that in some cases "executing the relevant test" may involve
comparing the encoded S-127 dataset to the source material by visual
means (e.g., for measures 17 and 18). For tests requiring visual comparison
of encoded data to source material, sampling methods may be used if
the volume of data precludes checking all the relevant data objects.

[[sec_9.3.1]]
==== Accuracy computations

Recommendations for Positional Accuracy / Absolute or External Accuracy:

Maximum RMSE (horizontal) = E / 10000

Where:

E = Denominator of intended scale of mapping

[[sec_9.4]]
=== Data quality testing and reporting

S-127 products must be tested with the S-127 specific checks prior
to release by the data producer. The data producer must review the
check results and address any issues to ensure sufficient quality
of the data products. The checks are a mix of data format validation
checks, conformance to standard checks and logical consistency checks.
The checks are listed in Annex E.

Production and certification processes for S-127 data should include
a standalone quality report which provides full information on the
original results (with evaluation procedures and measures applied).

The dataset or exchange set metadata that is distributed with the
exchange set may describe only the aggregated result with a reference
to the original results described in the standalone quality report.
The aggregated Data Quality result provides an indication if the dataset
has passed conformance to the Data Product Specification.

Data Quality Measure Aggregation results should be included to indicate
if the dataset/dataset series have passed the Product Specifications.
The elements which must be included are described in <<table_9.2>>.

[[table_9.2]]
.Elements of data quality aggregated report (extract from <<IHO_S_97,part=C>> checklist)
[cols="5"]
|===
h| Data quality element and sub element h| Definition h| DQ measure / description h| Evaluation scope h| Applicable to spatial representation types

| Aggregation Measures / AggregationMeasures
| In a data product specification, several requirements are set up
for a product to conform to the specification.
| DataProductSpecificationPassed / This data quality measure is a
boolean indicating that all requirements
in the referred data product specification are fulfilled.
| dataset | All features and information types of the dataset

| Aggregation Measures / AggregationMeasures
| In a data product specification, several requirements are set up
for a product to conform to the specification.
| DataProductSpecificationFailRate / This data quality measure is
a number indicating the number of data product specification requirements
that are not fulfilled by the current product/dataset in relation
to the total number of data product specification requirements.
| dataset | All features and information types of the dataset

|===


[[sec_10]]
== Data capture and classification

Data source: S-127 products must be based on data sources released
by an appropriate MTM defining authority. Data source must be described
in each data product.

The production process used to generate MTM products may be described
in the comment attribute of the dataset metadata.

[[sec_10.1]]
=== Data encoding and product delivery

[[sec_10.1.1]]
==== Data encoding

The principal encoding will be the Open Geospatial Consortium (OGC),
Geography Markup Language (GML) format. GML is an XML grammar designed
to express geographical features. It serves as a modelling language
for geographic systems as well as an open interchange format for geographic
transactions.

[[sec_10.1.2]]
==== Types of datasets

A dataset is a grouping of features, attributes, geometry and metadata
which comprises a specific coverage. <<table_10.1>> lists the types
of MTM datasets which may be produced and contained within an exchange
set:

[[table_10.1]]
.MTM dataset types
[cols="21,44"]
|===
h| Dataset h| Explanations

| New dataset (base dataset)
| Data for an area different (in coverage and/or extent) to existing
datasets.

| New Edition of a dataset
| A re-issue plus new information which has not been previously distributed
by Updates. Each New Edition of a dataset must have the same name
as the dataset that it replaces and should have the same spatial extents.
The edition number in the dataset discovery metadata must increment
up by one from the previous edition.

| Update dataset
| A delta change of the latest edition of a dataset. If there is more
than one update dataset, the subsequent update will be a delta of
the base dataset + earlier update datasets.

| Cancellation | Used to cancel dataset and any related update datasets.

|===

[[sec_10.1.3]]
==== Content of update datasets

Update datasets can only contain replacements, deletions, and additions
of whole feature instances or information instances. This means that
when a feature or information instance is updated, the new version
must contain all the attributes of the old instance, including any
inline spatial attributes (i.e., inline geometry), except those attributes
that are being removed.

An association to an instance of a feature or information type is
treated as an attribute of the referring instance, and therefore adding
or deleting an association means the original referring instance must
be replaced with a new version. The instance at the other end of the
association needs to be replaced if and only if it contains a reference
to the first instance.

Spatial objects that are not inline (i.e., geometry that is encoded
as an independent spatial object in the dataset) is treated like any
other object, i.e., it needs to be updated if and only if the primitive
has changed (e.g., a coordinate is updated).

Feature and information type instances are deleted without replacement
by setting the fixedDateRange.dateEnd attribute of the instance to
the date of deletion, which will usually be the issue date of the
update.

[[sec_10.2]]
=== Encoding of latitude and longitude

Values of latitude and longitude must be accurate to 7 decimal places.
Coordinates must be encoded as decimals in the format described in
<<sec_10.2.1>>. The encoding is indicated by multiplication factor
fields defined in the dataset identification record.

[[sec_10.2.1]]
==== Encoding of coordinates as decimals

Values should be coded as decimal numbers with 7 or fewer digits after
the decimal. The normative encoding is in degrees, with an accuracy
of stem:[10^{-7}] degrees, i.e., 7 digits after the decimal point.

The decimal point must be indicated by the "." character.

Trailing zeroes after the decimal point (and the decimal point itself
if appropriate) may be omitted at producer discretion, but the accuracy
must still be as indicated (e.g., stem:[10^{-7}] degrees for coordinates
of default accuracy).

Latitude and longitude multiplication factors held in the Dataset
Structure Information field under [coordMultFactorX] and [coordMultFactorY]
must be set to a value corresponding to the encoding, i.e., {1} for
coordinates encoded in decimal degrees.

[example]
A stem:["longitude" = 42.0000] is converted into
stem:[X = "longitude" * "coordMultFactorX" = 42.0000 * 1 = 42.0000000].

[[sec_10.3]]
=== Numeric attribute encoding

Floating point and integer attribute values must not contain leading
zeros. Floating point attribute values must not contain non-significant
trailing zeros.

[[sec_10.4]]
=== Text attribute values

Character strings must be encoded using the character set defined
in <<ISO_10646_1>>, in Unicode Transformation Format-8 (UTF-8).

[[sec_10.5]]
=== Mandatory attribute values

There are four reasons why attribute values may be considered mandatory:

* They determine whether a feature is in the display base,
* Certain features make no logical sense without specific attributes,
* Some attributes are necessary to determine which symbol is to be
displayed,
* Some attributes are required for safety of navigation.

All mandatory attributes are identified in the Feature Catalogue and
summarised in <<S127AnnexA>>.

[[sec_10.6]]
=== Unknown attribute values

When a mandatory attribute code or tag is present but the attribute
value is missing, it means that the producer wishes to indicate that
this attribute value is unknown. Missing mandatory attributes must
be "nilled."

Optional attributes must be omitted altogether if the value is unknown
or missing. They must not be "nilled."

=====
A landmark feature has unknown category of landmark (mandatory attribute)
and function (optional attribute). The feature could be coded as:

[source]
--
<Landmark>
  <categoryOfLandmark xsi:nil="true"/>
  <function>radio</function>
  ... other attributes...
  ... <status> is NOT coded ...
<Landmark>
--
=====

[[sec_10.7]]
=== Structure of dataset files

// left it here

[[sec_10.7.1]]
==== Sequence of objects

The order of data objects in each dataset file is described below:

[pseudocode%unnumbered]
====
    Dataset Identification Information
    Dataset structure information
    Spatial records for by-reference geometries
        Point
        Multi point
        Curve
        Composite Curve
        Surface
    Information objects
    Feature objects (Geometry may be encoded inline or by reference.)
    Meta features
    Geo features
====

[[sec_10.8]]
=== Object identifiers

The "name" of feature records must provide a unique world-wide identifier
of feature records. The "name" of the record is the combination of
the subfields *agency*, *featureObjectIdentifier*, and
*featureIdentificationSubdivision* elements of the *featureObjectIdentifier*
element of the object.

Features, information types, collection objects, meta features, and
geometries (inline or external) are all required by the schema to
have a *gml:id* attribute with a value that is unique within the dataset.
The *gml:id* values must be used as the reference for the object from
another object in the same dataset or another dataset.

MRN identifiers are not included in this version due to ongoing development
of the IHO guidelines in the use of MRN for product specifications.

[[sec_10.9]]
=== Data coverage

All areas of a dataset must be covered by a *DataCoverage* meta feature.

An update dataset must not change the limit of a *Data Coverage* feature
for the base dataset. Where the limit of a *Data Coverage* feature
for a base dataset is to be changed, this must be done by issuing
a new edition of the dataset.

[[sec_10.10]]
=== Data overlap

S-127 datasets must not overlap other S-127 datasets.

[[sec_10.11]]
=== Data quality

One or more *QualityOfNonBathymetricData* features must cover the
dataset.

[[sec_10.12]]
=== Data extent

Datasets must not cross the stem:[180 "unitsml(deg)"] meridian of longitude


[[sec_11]]
== Data delivery

[[sec_11.1]]
=== Data product delivery information

This data product specification defines GML as the primary format
in which MTM data products are delivered. The delivery format is described
in <<table_11.1>> by the following items (from <<ISO_19131_2007>>): format
name, version, specification, language, character set.

[[table_11.1]]
.Data product delivery
[cols="3"]
|===
h| Name h| ISO 19131 Elements h| Value

| Format name | DPS_DeliveryInformation.deliveryFormat > DPS_DeliveryFormat.formatName
| GML footnote:note_eleven_one[GML is an XML encoding for the transport
and storage of geographic information, including both the geometry
and the properties of geographic features, between distributed systems.
The XML Schema for the GML application schema is provided in a schema
document S127.xsd which imports other schema(s) defining common types.
(All files are available on the S-100 distribution site link:++https://github.com/IHO-S100WG++[] ).
Feature instances must validate against S127.xsd and conform to all
other requirements specified in this data product specification including
all constraints not captured in the XML Schema document.]

| Version | DPS_DeliveryInformation.deliveryFormat > DPS_DeliveryFormat.version
| 3.2.1
| Specification description
| DPS_DeliveryInformation.deliveryFormat > DPS_DeliveryFormat.specification
| GML footnote:note_eleven_one[]

| Language | DPS_DeliveryInformation.deliveryFormat > DPS_DeliveryFormat.language
| English | Character set
| DPS_DeliveryInformation.deliveryFormat > DPS_DeliveryFormat.characterSet > MD_CharacterSetCode
| 004 -- utf8

|===

[[sec_11.1.1]]
==== Dataset loading

Datasets must always be loaded in the order of base dataset first,
then update datasets in the corrected sequential order. Systems are
not to load updates out of order, for example if update 1-5 is present,
then 6 is missing, update 7 must not be loaded.

[[sec_11.1.2]]
==== New editions

When a new edition of a dataset is received, the system must replace
the previous edition, along with any updates with the new edition
of the dataset. Loading of subsequent updates follow the same rule
as above.

[[sec_11.2]]
=== Dataset size

MTM datasets must not exceed 20MB.

Update datasets must not exceed 500KB.

[[sec_11.3]]
=== Exchange set

Data which conforms to this product specification must be delivered
by means of an exchange set.

An exchange set will consist of one or more MTM datasets. An exchange
set may also include one or more support files containing supplementary
information encoded in separate files. These are linked to the MTM
dataset features, by feature and information type attributes defined
in the application schema, e.g., *fileReference*. Each exchange set
will include a single (XML) catalogue file, S-127 exchange set catalogues
conform to S-100 4.0.0 <<fig_4>>a-D-2 without modification, containing
discovery metadata for each MTM dataset as well as support files.
S-127 Exchange set structure conforms to S-100 4.0.0 <<fig_4>>a-D-3
without modification.

[[fig_30]]
.Exchange set structure
image::figure-30.png[]

[[sec_11.4]]
=== Support files

Support files contain ancillary textual or graphic information in
separate (linked to the dataset) files. The following formats are
allowed for support files:

* Plain text files must contain only general text as defined in this
standard. Files must use the UTF-8 character set encoding.
* HTML and XML files must contain only text and markup as defined
in the relevant W3C standards. Files must use the UTF-8 character
set encoding. References in datasets to HTML and XML support files
must treat them as text files (i.e., they should not be referenced
using attributes intended for picture files).
* Picture files must be in the Tagged Image file Format
(TIFF) [Edition 6.0].

<<table_11.2>> describes the constraints on support file formats and
provides the corresponding file extensions.

[[table_11.2]]
.Support file formats and extensions
[cols="3"]
|===
h| File type h| Extension h| Description

.3+| Text
| TXT |
| HTM
| HTML files must only include inline or embedded Cascading Style
Sheet (CSS) information and must not contain embedded Javascript or
other dynamic content, for example DHTML, Flash etc.
| XML
| XML documents must only be included in accordance with guidance
provided within the Data Classification and Encoding Guide
(<<S127AnnexA>>) and must not contain embedded Javascript or other dynamic
content.
| Picture | TIF | Baseline TIFF 6.0.
|===


[[sec_11.5]]
=== Support file naming convention

All support files will have unique world-wide file identifiers.
The file identifier of support information should not be used to describe
the physical content of the file. The support file metadata that accompanies
the file will inform the user of the name and purpose of the file
(new, replacement and deletion).

In this encoding the support files are named according to the specifications
given below:

127CCCCXXXXXXXX.YYY

The main part forms an identifier where:

* The first three characters are always "127" and identify the dataset
as an S-127 dataset.
* The next four characters identify the issuing agency by its alphanumeric
agency code in the IHO producer code register in the IHO GI Registry
(i.e., the IHO is identified as "AA", not "1810"). Where the agency
code consists of fewer than four characters, sufficient zeros must
be suffixed to make the length exactly four characters
(e.g., "AA00" for IHO).
* The eighth up to the fifteenth character can be used in any way
by the producer to provide a unique file name for the dataset.
The following characters are allowed in the dataset name, A to Z,
0 to 9 and the special character _ (underscore). The ninth through
fifteenth characters are optional (i.e., at least one character must
be used).
* .YYY -- support file extension. The YYY portion must conform to
the file format as described in <<table_11.2>>.

[[sec_11.6]]
=== Dataset naming convention

All dataset files will have unique world-wide file identifiers.
The file identifier of the dataset should not be used to describe
the physical content of the file. The dataset file metadata that accompanies
the file will inform the user of the name and purpose of the file
(new, replacement, and deletion).

In this encoding the dataset files are named according to the specifications
given below:

127CCCCXXXXXXXXXX.GML

The main part forms an identifier where:

* The first three characters are always "127" and identify the dataset
as an S-127 dataset.
* The next four characters identify the issuing agency by its alphanumeric
agency code in the IHO producer code register in the IHO GI Registry
(i.e., the IHO is identified as "AA", not "1810"). Where the agency
code consists of fewer than four characters, sufficient zeros must
be suffixed to make the length exactly four characters
(e.g., "AA00" for IHO).
* The eighth up to the seventeenth character can be used in any way
by the producer to provide a unique file name for the dataset.
The following characters are allowed in the dataset name, A to Z,
0 to 9 and the special character _ (underscore). The ninth through
seventeenth characters are optional (i.e., at least one character
must be used).

[[sec_11.7]]
=== Update dataset naming convention

All update dataset files will have an identical name to the base dataset,
aside from the separator and update number sequence.

In this encoding the update dataset files are named according to the
specifications given below:

127CCCCXXXXXXXXXX_XXX.GML

The main part forms an identifier where:

* The first up to the seventeenth characters are the same as the dataset
being updated and therefore conform to the rules described in <<sec_11.6>>.
* The next character must be an underscore "_".
* The next three characters must be numerical (0-9) characters to
indicate the place of the update dataset in the update sequence.

[[sec_11.8]]
=== Catalogue file naming convention

The exchange catalogue acts as the table of contents for the exchange
set. The catalogue file of the exchange set must be named CATALOG.XML.
No other file in the exchange set may be named CATALOG.XML. The content
of the exchange catalogue file is described in <<sec_14>>.


[[sec_12]]
== Data maintenance

[[sec_12.1]]
=== Introduction

Datasets are maintained as needed and must include mechanisms for
MTM updating. Data updates will be made by new editions. The maintenance
and update frequency of MTM datasets should be defined by the producers
(official national authority) implementing this specification.

Data Producers must use applicable sources to maintain and update
data and provide a brief description of the sources that were used
to produce the dataset in the appropriate metadata field.

[[sec_12.2]]
=== Production process for base and update datasets

Data Producers should follow their established production processes
for maintaining and updating datasets. Data is produced against the
DCEG and checked against the appropriate set of validation rules in
Appendix E.

[[sec_12.3]]
=== Dataset updates and cancellation

The purpose of issue of the dataset is indicated in the "purpose"
field of the dataset discovery metadata. In order to terminate a dataset,
an update dataset file is created for which the edition number must
be set to 0. This convention is only used to cancel a base dataset
file.

Where a dataset is cancelled and its name is reused at a later date,
the issue date must be greater than the issue date of the cancelled
dataset.

When the dataset is cancelled it must be removed from the system along
with all related update datasets and support files.

An exchange set may contain base dataset files and update dataset
files for the same datasets. Under these circumstances the update
dataset files must follow in the correct sequential order from the
last update applied to the base dataset file.

[[sec_12.4]]
=== Support file updates

The purpose of issue is indicated in the "purpose" field of the support
file discovery metadata. Support files carrying the "deletion" flag
in metadata must be removed from the system. When a feature or information
type pointing to a text, picture, or application file is deleted or
updated so that it no longer references the file, the system software
must check to see whether any other feature or information type references
the same file before that file is deleted.

Updates or deletions of a support file may require concurrent updates
to feature or information type instance attributes that depend on
the file, e.g., pictorialRepresentation, fileReference, and fileLocator
attributes.

[[sec_12.5]]
=== Feature and portrayal catalogues

For each new version of the S-127 Product Specification a new feature
and portrayal catalogue will be released. The system must be able
to manage datasets and their catalogues that are created on different
versions of the S-127 Product Specification.

[[sec_12.6]]
=== Feature history, versions, and change tracking

If applications or production systems require versioning of individual
instances of feature or information types, maintenance of histories,
or change tracking, the methods for versioning, history management,
and change tracking and display are left to the application or production
system.

[[sec_12.7]]
=== Dataset encryption

Details about dataset encryption are still to be determined, and may
mirror the method described in S-101.


[[sec_13]]
== Portrayal

Portrayal is not defined in this version of S-127 Marine Traffic Management
Product Specifications. Users are free to choose the means and methodology
of portrayal as they see best suited for their needs. It should be
noted that future versions of S-127 may include a portrayal catalogue,
and any implementer should therefore anticipate this, and make sufficient
provisions in any system supporting S-127.


[[sec_14]]
== Metadata

[[sec_14.1]]
=== Introduction

The MTM metadata specification conforms to the S-100 metadata specification
in <<IHO_S_100,part=4a>>, which is a profile of the <<ISO_19115_1>> standard. These
documents provide a structure for describing digital geographic data
and define metadata elements, a common set of metadata terminology,
definitions, and extension procedures.

The overall structure of metadata in S-127 exchange sets is the same
as in S-100, and is depicted in <<fig_31>>. Metadata in exchange sets
consists of discovery metadata for the datasets and support files
in the exchange set (classes S100_DatasetDiscoveryMetadata and
S100_SupportFileDiscoveryMetadata), metadata in <<ISO_19115_1>> format
for datasets, and metadata about any feature, portrayal, or interoperability
catalogues which are in the exchange set (S100_CatalogueMetadata).

The discovery metadata classes have numerous attributes which enable
important information about the datasets and accompanying support
files to be examined without the need to process the data, for example
decrypt, decompress, load etc. Other catalogues such as feature and
portrayal catalogues can be included in the exchange set in support
of the datasets.

More detailed information for the classes is depicted in <<fig_32>>
and details about the metadata classes are provided in <<sec_14.2;to!sec_14.5>>.

[[fig_31]]
.Metadata in exchange catalogue
image::figure-31.png[]


[[fig_32]]
.S-127 Exchange catalogue and discovery metadata
image::figure-32.png[]

NOTE: Types with CI_, EX_, and MD_ prefixes are from packages defined
in <<ISO_19115_1>> and 19115-3 and adapted by S-100. Types with S100_
prefix are from packages defined in S-100.

NOTE: When a dataset is terminated, the purpose metadata field is
set to 3 (terminated), and the editionNumber metadata field is set
to 0. All inapplicable but mandatory metadata fields must be nilled.

In <<fig_32>> and the following clauses, classes show only those attributes
which are used in S-127 exchange catalogues. Similarly, enumerations
show only those values which are allowed in S-127 exchange catalogues.

[[sec_14.2]]
=== Dataset metadata

Dataset metadata is intended to describe information about a dataset.
It facilitates the management and exploitation of data and is an important
requirement for understanding the characteristics of a dataset.
Whereas dataset metadata is usually fairly comprehensive, there is
also a requirement for a constrained subset of metadata elements that
are usually required for discovery purposes. Discovery metadata are
often used for building web catalogues, and can help users determine
whether a product or service is fit for purpose and where they can
be obtained.

[[sec_14.2.1]]
==== Metadata for new datasets and new editions

Dataset discovery metadata for new datasets and new editions of published
datasets is described in <<table_14.1>>.

[[table_14.1]]
.Dataset discovery metadata
[cols="5"]
|===
h| Name h| Multiplicity h| Value h| Type h| Remarks

| S100_DataSetDiscoveryMetadata | | | Class
| The following S-100 attributes are not used: verticalDatum, soundingDatum,
optimumDisplayScale, maximumDisplayScale, minimumDisplayScale.

| fileName | 1 | | CharacterString | Dataset file name (see <<sec_11.6>>)

| filePath | 1 | | CharacterString | Full path from the exchange set root directory

| description | 1 | | CharacterString
| Short description of the area covered by dataset, e.g., area, harbour,
or port name, between two named locations etc.

| dataProtection | 0..1 | | Boolean
| TRUE: Encrypted +
FALSE: Unencrypted

| protectionScheme | 0..1 | | S100_ProtectionScheme | See <<fig_32>> and <<IHO_S_100,locality:appendix=4a-D>>.

| digitalSignatureReference | 1 | | S100_DigitalSignature
| Specifies the algorithm used to compute digitalSignatureValue. +
See <<fig_32>> and <<IHO_S_100,locality:appendix=4a-D>>.

| digitalSignatureValue | 1 | | S100_DigitalSignatureValue
| The value resulting from application of digitalSignatureReference. +
Implemented as the digital signature format specified in <<IHO_S_100,part=15>>.

| copyright | 0..1 | | MD_LegalConstraints>MD_RestrictionCode<copyright> (<<ISO_19115_1>>)
| "copyright" for copyrighted datasets, omitted otherwise

| classification | 0..1 | (one of the literals from the ISO codelist)
| ClassMD_SecurityConstraints>MD_ClassificationCode (codelist) <<ISO_19115_1>>
a|

. unclassified
. restricted
. confidential
. secret
. top secret
. sensitive but unclassified
. for official use only
. protected
. limited distribution

| purpose | 1 | {1}, {2} | MD_Identification>purpose (character string)
a|

. New dataset
. New edition

| specificUsage | 1 | | MD_USAGE>specificUsage(character string)MD_USAGE>userContactInfo(CI_Responsibility)
| brief description of the resource and/or resource series usage

| editionNumber | 1 | | CharacterString
| When a dataset is initially created, the edition number "1" is assigned to it. The edition number is increased by one with each new edition.

| issueDate | 1 | | Date | Date on which the dataset was generated.

| issueTime | 0..1 | | Time | Encoded only if time of issue is significant.

| productSpecification | 1 | | S100_ProductSpecification
| See Notes below this table for constraints on values.

| producingAgency | 1 | | CI_Responsibility>CI_Organisation or CI_Responsibility>CI_Individual
| Party responsible for generating the dataset. +
See <<IHO_S_100,table=4a-2>> and <<IHO_S_100,table=4a-3>>.

| horizontalDatumReference | 1 | EPSG | CharacterString |

| horizontalDatumValue | 1 | 4326 | Integer | WGS84


| epoch | 0..1 | | CharacterString
| For example, G1762 for the 2013-10-16 realization of the geodetic datum for WGS84

| dataType | 1 | GML | S100_DataFormat | The only value allowed is "GML".

| dataTypeVersion | 1 | 3.2.1 | CharacterString |

| dataCoverage | 1..* | | S100_DataCoverage
| See <<fig_32>> and <<IHO_S_100,locality:appendix=4a-D>>. A new or new-edition S-127 dataset must have at least one coverage.

| comment | 0..1 | | CharacterString | Any additional Information

| layerID | 1..* | S-101 | CharacterString | Dataset must be used with ENC in an ECDIS. +
Mandatory for S-127 new datasets and new editions.

| defaultLocale | 1 | | PT_Locale | See <<fig_32>> and <<IHO_S_100,locality:appendix=4a-D>>.

| otherLocale | 0..* | | PT_Locale | See <<fig_32>> and <<IHO_S_100,locality:appendix=4a-D>>.

| metadataFileIdentifier | 1 | | CharacterString | For example, identifier for <<ISO_19115_3>> metadata file

| metadataPointOfContact | 1 | | CI_Responsibility>CI_Individual or CI_Responsibility>CI_Organisation
| See <<IHO_S_100,table=4a-2>> and <<IHO_S_100,table=4a-3>>.

| metadataDateStamp | 1 | | Date
| Metadata creation date, which may or may not be the dataset creation date

| metadataLanguage | 1..* | | CharacterString |

| -- | 0..* | | Aggregation S100_SupportFileDiscoveryMetadata
| One for each support file linked to this dataset and present in the exchange set.

|===


NOTE: Attribute _productSpecification_: The values of sub-attributes
_name_ and _version_ must correspond to this version of the S-127
product specification. (<<sec_4.2>>). The value of sub-attribute _number_
must be the number assigned to this version of the S-127 product specification
in the GI registry.

[[sec_14.2.2]]
==== Update and cancellation dataset metadata

Update dataset metadata (<<table_14.2>>) is intended to describe information
about an update dataset. It facilitates the management and exploitation
of data and is an important requirement for understanding the characteristics
of an update dataset. Whereas dataset metadata is usually fairly comprehensive,
metadata for update datasets only describe the issue date and sequential
relation to the base dataset.

Update dataset discovery metadata omits the _dataCoverage_, _specificUsage_
and _layerID_ metadata attributes.

[[table_14.2]]
.Update dataset metadata
[cols="5"]
|===
h| Name h| Multiplicity h| Value h| Type h| Remarks

| S100_DataSetDiscoveryMetadata | | | Class
| The following S-100 attributes are not used for update datasets:
verticalDatum, soundingDatum, optimumDisplayScale, maximumDisplayScale,
minimumDisplayScale, dataCoverage, specificUsage, layerID.

| fileName | 1 | | CharacterString | Dataset file name (see <<sec_11.7>>)

| filePath | 1 | | CharacterString | Full path from the exchange set
root directory

| description | 1 | | CharacterString | Brief description of the update.

| dataProtection | 0..1 | | Boolean | Value must be same as base dataset.

| protectionScheme | 0..1 | | S100_ProtectionScheme | Value must be
same as base dataset.

| digitalSignatureReference | 1 | | S100_DigitalSignature
| Specifies the algorithm used tocompute digitalSignatureValue. +
See <<fig_32>> and <<IHO_S_100,locality:appendix=4a-D>>.

| digitalSignatureValue | 1 | | S100_DigitalSignatureValue
| The value resulting from application of digitalSignatureReference. +
Implemented as the digital signature format specified in <<IHO_S_100,part=15>>.

| copyright | 0..1 | | MD_LegalConstraints>MD_RestrictionCode<copyright> (<<ISO_19115_1>>)
| Value must be same as base dataset.

| classification | 0..1 | (one of the literals from the ISO codelist)
| ClassMD_SecurityConstraints>MD_ClassificationCode (codelist)
| Value must be same as base dataset.

| purpose | 1 | {3}, {4} | CharacterString
a|
[start=3]
. Update
. Cancellation

| editionNumber | 1 | | CharacterString | Value must be same as base dataset.

| updateNumber | 1 | | CharacterString | Update sequence number, must match file name.

| updateApplicationDate | 1 | | Date | Date of update

| issueDate | 1 | | Date | Date on which the dataset was generated.

| issueTime | 0..1 | | Time
| Encoded only if time of issue is significant such as when more than one update is planned in a day.

| productSpecification | 1 | | S100_ProductSpecification | Value must be same as base dataset.

| producingAgency | 1 | | CI_Responsibility>CI_Organisation or CI_Responsibility>CI_Individual
| Party responsible for generating the dataset. +
See <<IHO_S_100,table=4a-2>> and <<IHO_S_100,table=4a-3>>.

| horizontalDatumReference | 1 | EPSG | CharacterString |

| horizontalDatumValue | 1 | 4326 | Integer | WGS84

| epoch | 0..1 | | CharacterString | Must be same as base dataset

| dataType | 1 | GML | CharacterString |

| dataTypeVersion | 1 | 3.2.1 | CharacterString |

| comment | 0..1 | | CharacterString | Any additional Information

| defaultLocale | 1 | | PT_Locale | Must be same as base dataset. +
See <<fig_32>> and <<IHO_S_100,locality:appendix=4a-D>>.

| otherLocale | 0..* | | PT_Locale
| Must be same as base dataset. +
See <<fig_32>> and <<IHO_S_100,locality:appendix=4a-D>>.

| metadataFileIdentifier | 1 | | CharacterString
| For example, for <<ISO_19115_3>> metadata file

| metadataPointOfContact | 1 |
| CI_Responsibility>CI_Individual or CI_Responsibility>CI_Organisation
| See <<IHO_S_100,table=4a-2>> and <<IHO_S_100,table=4a-3>>.

| metadataDateStamp | 1 | | Date
| Metadata creation date, which may or may not be the dataset creation date

| metadataLanguage | 1..* | | CharacterString
| Must be same as base dataset

| -- | 0..* | | Aggregation S100_SupportFileDiscoveryMetadata
| One for each support file that is referenced by the update dataset
and present in the exchange set.

|===


[[sec_14.3]]
=== Support file metadata

Support file metadata (<<table_14.3>>) is intended to describe information
about a data resource. It facilitates the management and exploitation
of data and is an important requirement for understanding the characteristics
of a data resource.

[[table_14.3]]
.Support file metadata
[cols="5"]
|===
h| Name h| Multiplicity h| Value h| Type h| Remarks

| S100_SupportFileDiscoveryMetadata | | | Class |

| fileName | 1 | | CharacterString |

| fileLocation | 1 | | CharacterString
| Path relative to the root directory of the exchange set. The location
of the file after the exchange set is unpacked into directory <EXCH_ROOT>
will be<EXCH_ROOT>/<filePath>/<filename>

| purpose | 1 | | S100_SupportFilePurpose
| new, replacement, or deletion. +
Values "replacement" and "deletion" are allowed only in update datasets.

| editionNumber | 1 | | CharacterString
| When a dataset is initially created, the edition number 1 is assigned
to it. The edition number is increased by 1 at each new edition. Edition
number remains the same for a re-issue

| issueDate | 1 | | Date |

| supportFileSpecification | 1 | | S100_SupportFileSpecification
| See <<fig_32>> and <<IHO_S_100,locality:appendix=4a-D>>.

| dataType | 1 | | S100_SupportFileFormat
| The only values allowed for support files referenced in datasets
are: ASCII (for text files), TIFF, and HTML. +
Values XML, XSLT, and LUA are reserved for portrayal catalogue files.

| otherDataTypeDescription | 0..1 | | CharacterString |

| comment | 0..1 | | CharacterString |

| digitalSignatureReference | 0..1 | | S100_DigitalSignature
| Specifies the algorithm used to compute digitalSignatureValue. +
See <<fig_32>> and <<IHO_S_100,locality:appendix=4a-D>>.

| digitalSignatureValue | 0..1 | | S100_DigitalSignatureValue
| The value resulting from application of digitalSignatureReference. +
Implemented as the digital signature format specified in <<IHO_S_100,part=15>>.

| defaultLocale | 1 | | PT_Locale | See <<fig_32>> and <<IHO_S_100,locality:appendix=4a-D>>.

| otherLocale | 0..* | | PT_Locale | See <<fig_32>> and <<IHO_S_100,locality:appendix=4a-D>>.

|===


[[sec_14.4]]
=== Exchange set catalogue and metadata

Frequently datasets are packaged and distributed as composite exchange
sets by third party vendors. An exchange set could contain datasets
sourced from different data producers. For example, an exchange set
may contain numerous dataset files, ancillary data files, discovery
metadata files and others. Exchange set metadata contains metadata
about the contents of the exchange set and metadata about the data
distributor.

[[sec_14.4.1]]
==== Exchange catalogue file

All S-127 Exchange Catalogue files must contain at least the mandatory
metadata elements in <<table_14.4>>.

[[table_14.4]]
.S100_ExchangeCatalogue
[cols="5"]
|===
h| Name h| Multiplicity h| Value h| Type h| Remarks

| S100_ExchangeCatalogue | | | Class |

| identifier | 1 | | S100_CatalogueIdentifier | See Notes below this table.

| contact | 1 | | S100_CataloguePointOfContact | No special constraints on the S-100 class.

| productSpecification | 0..1 | | S100_ProductSpecification
| Conditional on all the datasets using the same product specification. See note below this table for constraints on values.

| metadataLanguage | 1 | English | CharacterString
| All datasets conforming to this PS must use English language. A catalogue in English must be provided. Discovery metadata elements within catalogues have their own locale attributes and may be repeated in languages other than English.

| exchangeCatalogueName | 1 | CATALOG.XML | CharacterString | Catalogue filename

| exchangeCatalogueDescription | 1 | | CharacterString |

| exchangeCatalogueComment | 0..1 | | CharacterString | Any additional Information

| compressionFlag | 0..1 | | Boolean
| TRUE: compressed +
FALSE: not compressed +
If compressed, the method must be that specified in <<IHO_S_100,part=15>>.

| sourceMedia | 0..1 | | CharacterString |

| replacedData | 0..1 | | Boolean |

| dataReplacement | 0..1 | | CharacterString |

| datasetDiscoveryMetadata | 0..* | | Aggregation S100_DatasetDiscoveryMetadata |

| -- | 0..* | | Aggregation S100_CatalogueMetadata
| Metadata for the feature, portrayal, and interoperability catalogues, if any

| supportFileDiscoveryMetadata | 0..* | | Aggregation S100_SupportFileDiscoveryMetadata |

|===


NOTE: Attribute _productSpecification_: Class *S100_ProductSpecification*
is depicted in <<fig_32>> and defined in <<IHO_S_100,locality:appendix=4a-D>>. The
values of sub-attributes _name_ and _version_ must correspond to this
version of the S-127 product specification. (<<sec_4.2>>). The value
of sub-attribute _number_ must be the number assigned to this version
of the S-127 product specification in the GI registry.

NOTE: Attribute _catalogueIdentifier_: Class *S100_CatalogueIdentifier*
is depicted in <<fig_32>> and defined in <<IHO_S_100,locality:appendix=4a-D>>.
The value of sub-attribute _S100_CatalogueIdentifier>identifier_ must
be chosen so that a 1/1 mapping from exchange set name to catalogue
identifier is recommended. This assumes a system for assigning unique
names to exchange sets -- as opposed to datasets -- is developed,
either by the producer or in this specification. Note that an exchange
set may contain multiple datasets.

[[sec_14.5]]
=== Metadata about feature and other catalogues

*S100_CatalogueMetadata* describes feature, portrayal, and interoperability
catalogues. This is an optional element that allows for descriptions
of feature, interoperability, and portrayal catalogues that are delivered
within the exchange set. This class is described in
<<IHO_S_100,locality:appendix=4a-D>>. S-127 uses the S-100 class without
modification, with the following constraints on allowed values:

.  Attribute _productSpecification_: For feature and portrayal catalogues,
the values of sub-attributes _name_ and _version_ must correspond
to this version of the S-127 product specification. (<<sec_4.2>>).
For interoperability catalogues, the values of sub-attributes _name_
and _version_ must correspond to the appropriate version of the S-98
product specification.
.  Attribute _productSpecification_: The value of sub-attribute _number_
must be the number assigned to this version of the S-127 product specification
in the GI registry. For interoperability catalogues, the values of
sub-attribute _number_ must correspond to the appropriate version
of the S-98 product specification.


[[sec_15]]
== Appendix D-1. GML Data Format Overview

This data format conforms to the profile described in <<IHO_S_100,part=10b>>,
which is based on GML. Each dataset in the XML dataset format consists
of a root or container element DataSet, whose structure is shown in
<<fig_33>> below. A _Dataset_ contains of optional header information
identifying the dataset
(contained in element _DatasetIdentificationInformation_) and providing
parameters (within element _DatasetStructureInformation_), followed
by 0 or more spatial objects (points, curves, or surfaces -- these
replace the S100:Geometry box in the figure), then information and
feature objects (within _imember_ and _member_ container elements
respectively). _Dataset_, _imember_, and _member_ elements are format
constructs and not part of the application schema. Also, the root
Dataset element is derived from _gml:AbstractFeatureType_
(another GML data format idiom). <<fig_33>> shows the top-level structure
of a dataset.

The top-level _Dataset_ element includes the dataset bounding box
(_gml:boundedBy_ - not required by the application schema, but used
by GML off-the-shelf software).

[[fig_33]]
.Top-level structure of dataset
image::figure-33.png[]



Feature and information type instances are placed in <_member_> and
<_imember_> containers respectively. The figures that follow show
the allowed feature (<<fig_34>>) and information instances (<<fig_35>>)
respectively. Following GML idiom, the schema uses the XML substitution
groups mechanism to include the allowed feature and information types.

[[fig_34]]
.Features in the data format
image::figure-34.png[]


Note that even when abstract feature types are included in the substitution
groups, they act only as stand-ins for their non-abstract sub-types.
This means that for example, there cannot be any instances of
*ReportableServiceArea* itself -- instead, it acts as a stand-in for
its non-abstract subtypes *VesselTrafficServiceArea, *PiracyRiskArea*, etc,

[[fig_35]]
.Information types in the data format
image::figure-35.png[]



The structure of an example feature is shown in <<fig_36>>.
The *PilotageDistrict* feature inherits the attributes of the S-127
abstract feature *FeatureType*, which in turn is derived from generic
S-100 type defined in the GML profile described in <<IHO_S_100,part=10b>>;
that in turn derives from the GML *AbstractFeature* type. *PilotageDistrict*
therefore inherits attributes from S-127 abstract type *FeatureType*
(attributes _fixedDateRange_, _periodicDateRange_, _featureName_,
_sourceIndication_, _textContent_) as also its association roles
(_permission_, _providesInformation_, _positions_.) It also inherits
the generic attributes and associations bound in the S-100 GML profile
(_featureObjectIdentifier_, etc.). Attributes and association roles
bound locally in the *PilotageDistrict* (_communicationChannel_, _serviceProvider_)
are shown below the parent's type in the figure.

Detailed documentation generated from the XSD file accompanies this
specification as a separate document (Appendix D-2).


[[fig_36]]
.Structure of Marine Traffic Management feature in the GML data format
image::figure-36.png[]


<<fig_37>> shows an example of a *PilotageDistrict* feature instance.
This feature is associated to a *PilotBoardingPlace* feature instance
(the tag _<consistsOf_ with the target feature instance indicated
by the _xlink:href="..."_ attributes). The _consistsOf_ tag also contains
an _xlink:role_ XML attribute whose value indicate the role. It is
also associated with two pilot services (the _<serviceProvider_ tags,
with the target feature instances indicated by the _xlink:href="..."_
attribute in each).

[[fig_37]]
.Extract from sample GML dataset
image::figure-37.jpg[]

NOTE: Directed associations in the application schema may be encoded
only in the instance at the source end. Encoding the reverse link
(target to source) is optional. This is for compatibility with other
encodings.

NOTE: In S-100 edition 4.0.0, feature catalogues do not allow feature
bindings to be added to information types because the S-100 GFM does
not permit information types to have feature bindings, nor does the
<<ISO_8211>> encoding in <<IHO_S_100,part=10a>> permit such. In the interests
of consistency across encodings, reverse links between information
types and feature types are not used in GML format. If it is necessary
to encode such reverse links from an information type to a feature
type, the generic _invInformationAssociation_ element, which is defined
in _S100:AbstractInformationType_ in the S-100 profile for Edition
4.0.0 and is the base type for all information types.

The format for update datasets is the same as for base datasets.
A replacement feature instance, information type instance, or spatial
object will have the same gml:id XML attribute as the instance it
replaces -- GML applications can still distinguish between original
and replacement by using the update dataset file name as a prefix
to the gml:id value.

== Feature Catalogue

*Name:*:: Marine Traffic Management Feature Catalogue

*Scope:*

*Version Number:*:: 1.0.01

*Version Date:*:: 2018-1106-289

*Producer:*::
+
--
International Hydrographic Organization, +
4 quai Antoine 1er, +
B.P. 445 +
MC 98011 MONACO CEDEX +
Telephone: +377 93 10 81 00 +
Telefax: +377 93 10 81 40
--

*Language:*:: English

(See Annex with review print of Feature Catalogue.)